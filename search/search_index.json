{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"This is under construction, please ignore for the moment \u00b6 vhlab-toolbox-matlab \u00b6 About \u00b6 vlt is a Matlab toolbox for general Matlab programming, science, and neuroscience. It includes the functions we wish Matlab had natively as well as some lab-invented file formats. It has been slowly building since Steve was a grad student in 1999, with contributions from the lab and other colleagues (notably Alexander Heimel, Mark Mazurek, and others) over the years. The functions are available in two ways: as regular functions and in the package 'vlt'. The use of the functions without the vlt.package.function_name form is deprecated but they are still available.","title":"Home"},{"location":"#this-is-under-construction-please-ignore-for-the-moment","text":"","title":"This is under construction, please ignore for the moment"},{"location":"#vhlab-toolbox-matlab","text":"","title":"vhlab-toolbox-matlab"},{"location":"#about","text":"vlt is a Matlab toolbox for general Matlab programming, science, and neuroscience. It includes the functions we wish Matlab had natively as well as some lab-invented file formats. It has been slowly building since Steve was a grad student in 1999, with contributions from the lab and other colleagues (notably Alexander Heimel, Mark Mazurek, and others) over the years. The functions are available in two ways: as regular functions and in the package 'vlt'. The use of the functions without the vlt.package.function_name form is deprecated but they are still available.","title":"About"},{"location":"contributing/","text":"Contributing \u00b6 Anyone with a GitHub account can contribute. You might write an issue to see if your change is already planned or for the developers' recommended way of implementing your proposed change. Press the Fork button in the upper-right corner of the vhlab-toolbox-matlab GitHub repository to make a copy/fork of vhlab-toolbox-matlab in your own GitHub space. Make your changes. Commit your changes back to your fork. Finally, issue a Pull Request on GitHub from your fork. The request will be received by the vhlab-toolbox-matlab development team for integration.","title":"Contributing"},{"location":"contributing/#contributing","text":"Anyone with a GitHub account can contribute. You might write an issue to see if your change is already planned or for the developers' recommended way of implementing your proposed change. Press the Fork button in the upper-right corner of the vhlab-toolbox-matlab GitHub repository to make a copy/fork of vhlab-toolbox-matlab in your own GitHub space. Make your changes. Commit your changes back to your fork. Finally, issue a Pull Request on GitHub from your fork. The request will be received by the vhlab-toolbox-matlab development team for integration.","title":"Contributing"},{"location":"installation/","text":"Installation: \u00b6 Recommended method: \u00b6 vhlab-toolbox-matlab is installed as a part of the Neuroscience Data Interface ( NDI ). The easiest way is to install it with the NDI installer as described here. Make sure git is installed on your machine. If it is not, on Windows, go here . On Mac, open a terminal, and type xcode-select --install . Accept the license and wait for install. On Linux, consult your Linux distribution's package manager. Download the file ndi_install.m to your Desktop. Run the following in Matlab: cd ~/Desktop ndi_install Manual method: \u00b6 Run the following on your terminal command line: git clone http://github.com/VH-Lab/vhlab-toolbox-matlab You'll need a Matlab startup.m file. Add the command vlt_Init to that file, after ensuring that the directory for vhlab-toolbox-matlab is on your Matlab path. (All of these steps are taken care of via the automatic installation above.)","title":"Installation"},{"location":"installation/#installation","text":"","title":"Installation:"},{"location":"installation/#recommended-method","text":"vhlab-toolbox-matlab is installed as a part of the Neuroscience Data Interface ( NDI ). The easiest way is to install it with the NDI installer as described here. Make sure git is installed on your machine. If it is not, on Windows, go here . On Mac, open a terminal, and type xcode-select --install . Accept the license and wait for install. On Linux, consult your Linux distribution's package manager. Download the file ndi_install.m to your Desktop. Run the following in Matlab: cd ~/Desktop ndi_install","title":"Recommended method:"},{"location":"installation/#manual-method","text":"Run the following on your terminal command line: git clone http://github.com/VH-Lab/vhlab-toolbox-matlab You'll need a Matlab startup.m file. Add the command vlt_Init to that file, after ensuring that the directory for vhlab-toolbox-matlab is on your Matlab path. (All of these steps are taken care of via the automatic installation above.)","title":"Manual method:"},{"location":"reference/at_loadscaledstack.m/","text":"at_loadscaledstack \u00b6 Get image values","title":"at_loadscaledstack"},{"location":"reference/at_loadscaledstack.m/#at_loadscaledstack","text":"Get image values","title":"at_loadscaledstack"},{"location":"reference/%2Bmia/%2Bdocs/build.m/","text":"mia.docs.build \u00b6 mia . docs . build - build the mia markdown documentation from Matlab source Builds the mia documentation locally in vhlab - ArrayTomography - toolbox / docs and updates the mkdocs - yml file in the $ NDR - matlab directory . ** Example ** : mia . docs . build ();","title":"mia.docs.build"},{"location":"reference/%2Bmia/%2Bdocs/build.m/#miadocsbuild","text":"mia . docs . build - build the mia markdown documentation from Matlab source Builds the mia documentation locally in vhlab - ArrayTomography - toolbox / docs and updates the mkdocs - yml file in the $ NDR - matlab directory . ** Example ** : mia . docs . build ();","title":"mia.docs.build"},{"location":"reference/%40atdir/addtag.m/","text":"addtag \u00b6 ADDTAG - Add a tag to a dirstruct directory ADDTAG ( THEDIRSTRUCT , DIR , TAGNAME , VALUE ) Add a 'tag' to the directory DIR that is part of the directory structure object ( DIRSTRUCT ) named THEDIRSTRUCT . DIR should just be the name of the directory within THEDIRSTRUCT 's path. Tags are name / value pairs . The TAGNAME must be a valid Matlab variable name . Value can be any value that can be written to a string with SAVESTRUCTARRAY . See also : GETTAG , SAVESTRUCTARRAY","title":"addtag"},{"location":"reference/%40atdir/addtag.m/#addtag","text":"ADDTAG - Add a tag to a dirstruct directory ADDTAG ( THEDIRSTRUCT , DIR , TAGNAME , VALUE ) Add a 'tag' to the directory DIR that is part of the directory structure object ( DIRSTRUCT ) named THEDIRSTRUCT . DIR should just be the name of the directory within THEDIRSTRUCT 's path. Tags are name / value pairs . The TAGNAME must be a valid Matlab variable name . Value can be any value that can be written to a string with SAVESTRUCTARRAY . See also : GETTAG , SAVESTRUCTARRAY","title":"addtag"},{"location":"reference/%40atdir/atdir.m/","text":"atdir \u00b6 ATDIR - data directory management for Array Tomography data . AD = ATDIR ( PATHNAME ) Creates a data directory management object AD with full pathname PATHNAME . The directory format is as follows . There is a directory named PATHNAME that contains all the data . PATHNAME has subdirectories , named ' images ' , ' rois ' , and ' colocalization ' , or other names , that contain information relevant to the analysis of the data . Graphically , the file organization looks like the following : experiment / images / named_images / ( either single image or individual images of channels ) rois / named_rois / rois . mat - ROI data structure L . mat - Labeled image history . mat - list of actions that led to these rois labels - labels of these rois colocalization / See also : METHODS ( ' ATDIR ' ) Documentation for atdir doc atdir","title":"atdir"},{"location":"reference/%40atdir/atdir.m/#atdir","text":"ATDIR - data directory management for Array Tomography data . AD = ATDIR ( PATHNAME ) Creates a data directory management object AD with full pathname PATHNAME . The directory format is as follows . There is a directory named PATHNAME that contains all the data . PATHNAME has subdirectories , named ' images ' , ' rois ' , and ' colocalization ' , or other names , that contain information relevant to the analysis of the data . Graphically , the file organization looks like the following : experiment / images / named_images / ( either single image or individual images of channels ) rois / named_rois / rois . mat - ROI data structure L . mat - Labeled image history . mat - list of actions that led to these rois labels - labels of these rois colocalization / See also : METHODS ( ' ATDIR ' ) Documentation for atdir doc atdir","title":"atdir"},{"location":"reference/%40atdir/deleteitem.m/","text":"deleteitem \u00b6 DELETEITEM - Delete an item of a particular type from an ATDIR DELETEITEM(ATD, ITEMTYPE, ITEMNAME) Deletes the item ITEMNAME of type ITEMTYPE from the directory managed by the ATDIR object ATD. There is no turning back, the item is gone forever.","title":"deleteitem"},{"location":"reference/%40atdir/deleteitem.m/#deleteitem","text":"DELETEITEM - Delete an item of a particular type from an ATDIR DELETEITEM(ATD, ITEMTYPE, ITEMNAME) Deletes the item ITEMNAME of type ITEMTYPE from the directory managed by the ATDIR object ATD. There is no turning back, the item is gone forever.","title":"deleteitem"},{"location":"reference/%40atdir/display.m/","text":"display \u00b6 DISPLAY print info from an ATDIR object DISPLAY(ATD) Displays information about the ATDIR object ATD See also: ATDIR","title":"display"},{"location":"reference/%40atdir/display.m/#display","text":"DISPLAY print info from an ATDIR object DISPLAY(ATD) Displays information about the ATDIR object ATD See also: ATDIR","title":"display"},{"location":"reference/%40atdir/getcolocalizationfilename.m/","text":"getcolocalizationfilename \u00b6 GETCOLOCALIZATIONFILENAME - get the image file from an ATDIR CFILENAME = GETCOLOCALIZATIONFILENAME ( ATD , ITEMNAME ) Returns the colocalization filename associated with the item name ITEMNAME . Returns empty string ( '' ) if none .","title":"getcolocalizationfilename"},{"location":"reference/%40atdir/getcolocalizationfilename.m/#getcolocalizationfilename","text":"GETCOLOCALIZATIONFILENAME - get the image file from an ATDIR CFILENAME = GETCOLOCALIZATIONFILENAME ( ATD , ITEMNAME ) Returns the colocalization filename associated with the item name ITEMNAME . Returns empty string ( '' ) if none .","title":"getcolocalizationfilename"},{"location":"reference/%40atdir/gethistory.m/","text":"gethistory \u00b6 GETHISTORY - Get the history of an item from ATDIR directory H = GETHISTORY ( ATD , ITEMTYPE , ITEMNAME ) Returns the history structure of item ITEMNAME that is of type ITEMTYPE in the directory managed by the ATDIR object ATD . If there is no history , H is an empty structure . ITEMNAME and ITEMTYPE must be valid directory names . The history structure has the following fields , and is in chronological order of the operations performed on the ITEMTYPE : Fieldnames : | Description : --------------------------------------------------------- parent | If the item has a parent , the item name corresponding | to the parent is listed here . Otherwise it is an empty | string ( '' ) . operation | The text of the function call is described here parameters | The parameters that were used description | A human - readable description of the operation","title":"gethistory"},{"location":"reference/%40atdir/gethistory.m/#gethistory","text":"GETHISTORY - Get the history of an item from ATDIR directory H = GETHISTORY ( ATD , ITEMTYPE , ITEMNAME ) Returns the history structure of item ITEMNAME that is of type ITEMTYPE in the directory managed by the ATDIR object ATD . If there is no history , H is an empty structure . ITEMNAME and ITEMTYPE must be valid directory names . The history structure has the following fields , and is in chronological order of the operations performed on the ITEMTYPE : Fieldnames : | Description : --------------------------------------------------------- parent | If the item has a parent , the item name corresponding | to the parent is listed here . Otherwise it is an empty | string ( '' ) . operation | The text of the function call is described here parameters | The parameters that were used description | A human - readable description of the operation","title":"gethistory"},{"location":"reference/%40atdir/getimagefilename.m/","text":"getimagefilename \u00b6 GETIMAGEFILENAME - get the image file from an ATDIR IMFILENAME = GETIMAGEFILENAME ( ATD , ITEMNAME ) Returns the image filename associated with the item name ITEMNAME . It will examine the directory and return the first image file encountered ( searches . tiff , . tif , . gif , . jpg , . jpeg ) . Returns empty string ( '' ) if none .","title":"getimagefilename"},{"location":"reference/%40atdir/getimagefilename.m/#getimagefilename","text":"GETIMAGEFILENAME - get the image file from an ATDIR IMFILENAME = GETIMAGEFILENAME ( ATD , ITEMNAME ) Returns the image filename associated with the item name ITEMNAME . It will examine the directory and return the first image file encountered ( searches . tiff , . tif , . gif , . jpg , . jpeg ) . Returns empty string ( '' ) if none .","title":"getimagefilename"},{"location":"reference/%40atdir/getitems.m/","text":"getitems \u00b6 GETITEMS - Get items of a particular type in an ATDIR experiment directory ITEMSTRUCT = GETITEMS ( ATD , ITEMTYPE ) Returns an item struct array with all items of ITEMTYPE in the ATDIR director ATD . Examples of ITEMTYPE could be ' images ' , ' ROIs ' , etc ... The item struct is the following : Fieldname : | Description ------------------------------------------------------- name | The item name parent | The item ' s parent ' s name , if any history | A structure with the item ' s history","title":"getitems"},{"location":"reference/%40atdir/getitems.m/#getitems","text":"GETITEMS - Get items of a particular type in an ATDIR experiment directory ITEMSTRUCT = GETITEMS ( ATD , ITEMTYPE ) Returns an item struct array with all items of ITEMTYPE in the ATDIR director ATD . Examples of ITEMTYPE could be ' images ' , ' ROIs ' , etc ... The item struct is the following : Fieldname : | Description ------------------------------------------------------- name | The item name parent | The item ' s parent ' s name , if any history | A structure with the item ' s history","title":"getitems"},{"location":"reference/%40atdir/getlabeledroifilename.m/","text":"getlabeledroifilename \u00b6 GETLABELEDROIFILENAME - get the image file from an ATDIR ROIFILENAME = GETLABELEDROIFILENAME(ATD, ITEMNAME) Returns the labeled ROI filename associated with the ROI item name ITEMNAME.","title":"getlabeledroifilename"},{"location":"reference/%40atdir/getlabeledroifilename.m/#getlabeledroifilename","text":"GETLABELEDROIFILENAME - get the image file from an ATDIR ROIFILENAME = GETLABELEDROIFILENAME(ATD, ITEMNAME) Returns the labeled ROI filename associated with the ROI item name ITEMNAME.","title":"getlabeledroifilename"},{"location":"reference/%40atdir/getparent.m/","text":"getparent \u00b6 GETPARENT - Get the parent of an item from ATDIR directory P = GETPARENT ( ATD , ITEMTYPE , ITEMNAME ) Returns the parent name of item ITEMNAME that is of type ITEMTYPE in the directory managed by the ATDIR object ATD . If there is no parent , P is an empty string . ITEMNAME and ITEMTYPE must be valid directory names .","title":"getparent"},{"location":"reference/%40atdir/getparent.m/#getparent","text":"GETPARENT - Get the parent of an item from ATDIR directory P = GETPARENT ( ATD , ITEMTYPE , ITEMNAME ) Returns the parent name of item ITEMNAME that is of type ITEMTYPE in the directory managed by the ATDIR object ATD . If there is no parent , P is an empty string . ITEMNAME and ITEMTYPE must be valid directory names .","title":"getparent"},{"location":"reference/%40atdir/getpathname.m/","text":"getpathname \u00b6 GETPATHNAME - Get the pathname of an ATDIR P = GETPATHNAME(ATD) Returns the pathname associated with the ATDIR directory ATD. See also: ATDIR","title":"getpathname"},{"location":"reference/%40atdir/getpathname.m/#getpathname","text":"GETPATHNAME - Get the pathname of an ATDIR P = GETPATHNAME(ATD) Returns the pathname associated with the ATDIR directory ATD. See also: ATDIR","title":"getpathname"},{"location":"reference/%40atdir/getroifilename.m/","text":"getroifilename \u00b6 GETROIFILENAME - get the image file from an ATDIR ROIFILENAME = GETROIFILENAME(ATD, ITEMNAME) Returns the filename associated with the ROI item name ITEMNAME.","title":"getroifilename"},{"location":"reference/%40atdir/getroifilename.m/#getroifilename","text":"GETROIFILENAME - get the image file from an ATDIR ROIFILENAME = GETROIFILENAME(ATD, ITEMNAME) Returns the filename associated with the ROI item name ITEMNAME.","title":"getroifilename"},{"location":"reference/%40atdir/getroiparametersfilename.m/","text":"getroiparametersfilename \u00b6 GETROIPARAMETERSFILENAME - get the image file from an ATDIR ROIPFILENAME = GETROIFILENAME ( ATD , ITEMNAME , SHOWERROR ) Returns the filename associated with the ROI parameters for item name ITEMNAME .","title":"getroiparametersfilename"},{"location":"reference/%40atdir/getroiparametersfilename.m/#getroiparametersfilename","text":"GETROIPARAMETERSFILENAME - get the image file from an ATDIR ROIPFILENAME = GETROIFILENAME ( ATD , ITEMNAME , SHOWERROR ) Returns the filename associated with the ROI parameters for item name ITEMNAME .","title":"getroiparametersfilename"},{"location":"reference/%40atdir/gettag.m/","text":"gettag \u00b6 GETTAG - Get tag(s) from a DIRSTRUCT directory TAG = GETTAG(THEDIRSTRUCT, DIR) Reads tag(s)s from the DIR directory that is located with the DIRSTRUCT THEDIRSTRUCT. Tags are name/value pairs returned in the form of a structure array with fields 'name' and 'value'. They are located in a text file within the directory DIR with the filename 'tags.txt'. See also: ADDTAG, LOADSTRUCTARRAY","title":"gettag"},{"location":"reference/%40atdir/gettag.m/#gettag","text":"GETTAG - Get tag(s) from a DIRSTRUCT directory TAG = GETTAG(THEDIRSTRUCT, DIR) Reads tag(s)s from the DIR directory that is located with the DIRSTRUCT THEDIRSTRUCT. Tags are name/value pairs returned in the form of a structure array with fields 'name' and 'value'. They are located in a text file within the directory DIR with the filename 'tags.txt'. See also: ADDTAG, LOADSTRUCTARRAY","title":"gettag"},{"location":"reference/%40atdir/hastag.m/","text":"hastag \u00b6 HASTAG - Returns TRUE if a given tagname is present within a directory B = HASTAG ( DS , DIR , TAGNAME ) Looks in the directory DIR that is in the DIRSTRUCT DS and returns B == 1 if there is a tag with tagname TAGNAME , and 0 otherwise . The tag information is stored in the file tags . txt inside DIR .","title":"hastag"},{"location":"reference/%40atdir/hastag.m/#hastag","text":"HASTAG - Returns TRUE if a given tagname is present within a directory B = HASTAG ( DS , DIR , TAGNAME ) Looks in the directory DIR that is in the DIRSTRUCT DS and returns B == 1 if there is a tag with tagname TAGNAME , and 0 otherwise . The tag information is stored in the file tags . txt inside DIR .","title":"hastag"},{"location":"reference/%40atdir/removetag.m/","text":"removetag \u00b6 REMOVETAG - Remove a tag from a dirstruct directory REMOVETAG(THEDIRSTRUCT, DIR, TAGNAME) Removes a 'tag' with tagname TAGNAME from the directory DIR that is part of the directory structure object (DIRSTRUCT) named THEDIRSTRUCT. DIR should just be the name of the directory within THEDIRSTRUCT's path. See also: ADDTAG, GETTAG, SAVESTRUCTARRAY","title":"removetag"},{"location":"reference/%40atdir/removetag.m/#removetag","text":"REMOVETAG - Remove a tag from a dirstruct directory REMOVETAG(THEDIRSTRUCT, DIR, TAGNAME) Removes a 'tag' with tagname TAGNAME from the directory DIR that is part of the directory structure object (DIRSTRUCT) named THEDIRSTRUCT. DIR should just be the name of the directory within THEDIRSTRUCT's path. See also: ADDTAG, GETTAG, SAVESTRUCTARRAY","title":"removetag"},{"location":"reference/%40atdir/sethistory.m/","text":"sethistory \u00b6 SETHISTORY - Set the history of an item from ATDIR directory SETHISTORY ( ATD , ITEMTYPE , ITEMNAME , H ) Sets the history structure of item ITEMNAME that is of type ITEMTYPE in the directory managed by the ATDIR object ATD . ITEMNAME and ITEMTYPE must be valid directory names . The history structure should have the following fields , and is in chronological order of the operations performed on the ITEMTYPE : Fieldnames : | Description : --------------------------------------------------------- parent | If the item has a parent , the item name corresponding | to the parent is listed here . Otherwise it is an empty | string ( '' ) . operation | The text of the function call is described here parameters | The parameters that were used description | A human - readable description of the operation","title":"sethistory"},{"location":"reference/%40atdir/sethistory.m/#sethistory","text":"SETHISTORY - Set the history of an item from ATDIR directory SETHISTORY ( ATD , ITEMTYPE , ITEMNAME , H ) Sets the history structure of item ITEMNAME that is of type ITEMTYPE in the directory managed by the ATDIR object ATD . ITEMNAME and ITEMTYPE must be valid directory names . The history structure should have the following fields , and is in chronological order of the operations performed on the ITEMTYPE : Fieldnames : | Description : --------------------------------------------------------- parent | If the item has a parent , the item name corresponding | to the parent is listed here . Otherwise it is an empty | string ( '' ) . operation | The text of the function call is described here parameters | The parameters that were used description | A human - readable description of the operation","title":"sethistory"},{"location":"reference/GUI/at_itemeditlist_gui.m/","text":"at_itemeditlist_gui \u00b6 AT_ITEMLIST_GUI - Manage the view of a multi-frame image in a Matlab GUI AT_ITEMLIST_GUI Creates and manages a panel appropriate for examining a list of items in a Matlab GUI . To create a item edit list panel , call AT_ITEMLIST_GUI ( NAME , 'command' , 'init' ) where NAME is a unique name on your figure ( you can have more than one viewer per figure if you use different names ). You can pass additional name / value pairs that govern the behavior of the GUI . Commands and parameters are not case sensitive . Name IS case sensitive . Parameter ( default value ) | Description --------------------------------------------------------------------------- fig ( gcf ) | Figure number where the viewer is located Units ( 'pixels' ) | The units we will use LowerLeftPoint ([ 0 0 ]) | The lower left point to use in drawing , in units of \"units\" UpperRightPoint ([ 400 300 ]) | The upper right point to use in drawing , in units of \"units\" itemtype ( 'images' ) | The name of type of items to be managed ( known to atdir ) itemtype_singular ( 'image' ) | The English name of type of items to be managed ( singular ) itemtype_plural ( 'images' ) | The plural of the type itemstruct ([]) | If calling command = 'update_itemlist' , an itemstruct should be | passed . viewselectiononly ( 0 ) | 0 / 1 Should we view the current selection only , ignoring the | settings in 'visible' ? usevisible ( 1 ) | 0 / 1 Should we give the user the option to set the visibility | and color of each item ? visiblecbstring ( 'Visible' ) | String . The name we should use for the 'Visible' checkbox . useedit ( 1 ) | 0 / 1 Should we keep the edit menu available ? drawaction ([]) | Name of a function for the draw action . It provides a structure | as a name / value pair with name 'theinput' , and value a structure with fields: | itemname - a string with the name of the item | itemstruct_parameters - the viewing parameters ( visible , etc ) drawaction_userinputs ({}) | A list of user-provided inputs to the drawaction function . | The function is called as DRAWACTION ( DRAWACTION_USERINPUTS {:}, 'theinput' , thestructabove ) new_functions ({}) | Functions that can be called from the \"New [item]\" pull down menu new_items ( '' ) | The AT_ITEMLIST_GUI name to use for the item list for new functions . If empty , | then the current AT_ITEMLIST_GUI is used . edit_functions ({}) | Functions that can be called from the \"Edit [item]\" pull down menu edit_items ( '' ) | The AT_ITEMLIST_GUI name to be used for the item list for edit functions . If empty , | then the current AT_ITEMLIST_GUI is used . atd ([]) | ATDIR that manages the data directory extracbstring ( ' ' ) | String for the optional extra checkbox ui control useextracb ( 0 ) | 0 / 1 Should we use the extra checkbox ui control ? extracbcallsdrawaction ( 1 ) | 0 / 1 Should the extra checkbox ui control call drawaction ? One can also query the internal variables by calling AT_ITEMLIST_GUI ( NAME , 'command' , 'Get_Vars' ) Or obtain the uicontrol and axes handles by using: AT_ITEMLIST_GUI ( NAME , 'command' , 'Get_Handles' )","title":"at_itemeditlist_gui"},{"location":"reference/GUI/at_itemeditlist_gui.m/#at_itemeditlist_gui","text":"AT_ITEMLIST_GUI - Manage the view of a multi-frame image in a Matlab GUI AT_ITEMLIST_GUI Creates and manages a panel appropriate for examining a list of items in a Matlab GUI . To create a item edit list panel , call AT_ITEMLIST_GUI ( NAME , 'command' , 'init' ) where NAME is a unique name on your figure ( you can have more than one viewer per figure if you use different names ). You can pass additional name / value pairs that govern the behavior of the GUI . Commands and parameters are not case sensitive . Name IS case sensitive . Parameter ( default value ) | Description --------------------------------------------------------------------------- fig ( gcf ) | Figure number where the viewer is located Units ( 'pixels' ) | The units we will use LowerLeftPoint ([ 0 0 ]) | The lower left point to use in drawing , in units of \"units\" UpperRightPoint ([ 400 300 ]) | The upper right point to use in drawing , in units of \"units\" itemtype ( 'images' ) | The name of type of items to be managed ( known to atdir ) itemtype_singular ( 'image' ) | The English name of type of items to be managed ( singular ) itemtype_plural ( 'images' ) | The plural of the type itemstruct ([]) | If calling command = 'update_itemlist' , an itemstruct should be | passed . viewselectiononly ( 0 ) | 0 / 1 Should we view the current selection only , ignoring the | settings in 'visible' ? usevisible ( 1 ) | 0 / 1 Should we give the user the option to set the visibility | and color of each item ? visiblecbstring ( 'Visible' ) | String . The name we should use for the 'Visible' checkbox . useedit ( 1 ) | 0 / 1 Should we keep the edit menu available ? drawaction ([]) | Name of a function for the draw action . It provides a structure | as a name / value pair with name 'theinput' , and value a structure with fields: | itemname - a string with the name of the item | itemstruct_parameters - the viewing parameters ( visible , etc ) drawaction_userinputs ({}) | A list of user-provided inputs to the drawaction function . | The function is called as DRAWACTION ( DRAWACTION_USERINPUTS {:}, 'theinput' , thestructabove ) new_functions ({}) | Functions that can be called from the \"New [item]\" pull down menu new_items ( '' ) | The AT_ITEMLIST_GUI name to use for the item list for new functions . If empty , | then the current AT_ITEMLIST_GUI is used . edit_functions ({}) | Functions that can be called from the \"Edit [item]\" pull down menu edit_items ( '' ) | The AT_ITEMLIST_GUI name to be used for the item list for edit functions . If empty , | then the current AT_ITEMLIST_GUI is used . atd ([]) | ATDIR that manages the data directory extracbstring ( ' ' ) | String for the optional extra checkbox ui control useextracb ( 0 ) | 0 / 1 Should we use the extra checkbox ui control ? extracbcallsdrawaction ( 1 ) | 0 / 1 Should the extra checkbox ui control call drawaction ? One can also query the internal variables by calling AT_ITEMLIST_GUI ( NAME , 'command' , 'Get_Vars' ) Or obtain the uicontrol and axes handles by using: AT_ITEMLIST_GUI ( NAME , 'command' , 'Get_Handles' )","title":"at_itemeditlist_gui"},{"location":"reference/GUI/at_itemstruct2list.m/","text":"at_itemstruct2list \u00b6 AT_ITEMSTRUCT2LIST - Convert an itemstruct to a set of strings that can be listed [ LISTSTR , INFOSTR ] = AT_ITEMSTRUCT2LIST ( ITEMSTRUCT ,... ) Takes an ITEMSTRUCT ( see ATDIR / GETITEMS ) and produces a cell array of strings LISTSTR that indicates the parental relationships among the data . Children are listed below their \" parents \" and are indented . Note that the order of LISTSTR need not match the list of items in ITEMSTRUCT . INFOSTR is a human readable information string for each item , based on the ' history ' field . INFOSTR { i } is a cell list of strings for the ITEMSTRUCT . The order of INFOSTR {:} WILL match the list of ITEMSTRUCTs . This function can take extra name / value pairs that modify its functionality : Parameter ( default ) : | Description : ------------------------------------------------------------------- indent ( ' ' ) | The indentation of a child relative to its parent .","title":"at_itemstruct2list"},{"location":"reference/GUI/at_itemstruct2list.m/#at_itemstruct2list","text":"AT_ITEMSTRUCT2LIST - Convert an itemstruct to a set of strings that can be listed [ LISTSTR , INFOSTR ] = AT_ITEMSTRUCT2LIST ( ITEMSTRUCT ,... ) Takes an ITEMSTRUCT ( see ATDIR / GETITEMS ) and produces a cell array of strings LISTSTR that indicates the parental relationships among the data . Children are listed below their \" parents \" and are indented . Note that the order of LISTSTR need not match the list of items in ITEMSTRUCT . INFOSTR is a human readable information string for each item , based on the ' history ' field . INFOSTR { i } is a cell list of strings for the ITEMSTRUCT . The order of INFOSTR {:} WILL match the list of ITEMSTRUCTs . This function can take extra name / value pairs that modify its functionality : Parameter ( default ) : | Description : ------------------------------------------------------------------- indent ( ' ' ) | The indentation of a child relative to its parent .","title":"at_itemstruct2list"},{"location":"reference/GUI/atgui2.m/","text":"atgui2 \u00b6 ATGUI2 - 2 nd generation GUI for Array Tomography analysis ATGUI2 Launches a graphical user interface for Array Tomography analysis .","title":"atgui2"},{"location":"reference/GUI/atgui2.m/#atgui2","text":"ATGUI2 - 2 nd generation GUI for Array Tomography analysis ATGUI2 Launches a graphical user interface for Array Tomography analysis .","title":"atgui2"},{"location":"reference/GUI/archived_code/ATGUI.m/","text":"ATGUI \u00b6 ATGUI MATLAB code for ATGUI . fig ATGUI , by itself , creates a new ATGUI or raises the existing singleton *. H = ATGUI returns the handle to a new ATGUI or the handle to the existing singleton *. ATGUI ( 'CALLBACK' , hObject , eventData , handles , ... ) calls the local function named CALLBACK in ATGUI . M with the given input arguments . ATGUI ( 'Property' , 'Value' , ... ) creates a new ATGUI or raises the existing singleton *. Starting from the left , property value pairs are applied to the ATGUI before ATGUI_OpeningFcn gets called . An unrecognized property name or invalid value makes property application stop . All inputs are passed to ATGUI_OpeningFcn via varargin . * See ATGUI Options on GUIDE 's Tools menu. Choose \"ATGUI allows only one instance to run ( singleton ) \". See also : GUIDE , GUIDATA , GUIHANDLES","title":"ATGUI"},{"location":"reference/GUI/archived_code/ATGUI.m/#atgui","text":"ATGUI MATLAB code for ATGUI . fig ATGUI , by itself , creates a new ATGUI or raises the existing singleton *. H = ATGUI returns the handle to a new ATGUI or the handle to the existing singleton *. ATGUI ( 'CALLBACK' , hObject , eventData , handles , ... ) calls the local function named CALLBACK in ATGUI . M with the given input arguments . ATGUI ( 'Property' , 'Value' , ... ) creates a new ATGUI or raises the existing singleton *. Starting from the left , property value pairs are applied to the ATGUI before ATGUI_OpeningFcn gets called . An unrecognized property name or invalid value makes property application stop . All inputs are passed to ATGUI_OpeningFcn via varargin . * See ATGUI Options on GUIDE 's Tools menu. Choose \"ATGUI allows only one instance to run ( singleton ) \". See also : GUIDE , GUIDATA , GUIHANDLES","title":"ATGUI"},{"location":"reference/at_analysis/at_compare_autothreshold.m/","text":"at_compare_autothreshold \u00b6 AT_COMPARE_AUTOTHRESHOLD - compare autothresholding performance for multiple experiments AT_COMPARE_AUTOTHRESHOLD ( D , IMAGENAME ) D is a cell array of directory names to examine , and IMAGENAME is the image to process with the autothreshold function . No results are saved except to the plot This function takes additional arguments as name / value pairs : Parameter ( default ) | Description ------------------------------------------------------------------ N ( 3 ) | Number of rows of plots in each figure M ( 2 ) | Number of columns of plots in each figure labelmethod ( 'IMNAME#' ) | How to label the graphs . Methods include : | 'IMNAME#' : label with IMAGENAME and the exp # t_levels ([ 80 30 ]) | Threshold signal levels","title":"at_compare_autothreshold"},{"location":"reference/at_analysis/at_compare_autothreshold.m/#at_compare_autothreshold","text":"AT_COMPARE_AUTOTHRESHOLD - compare autothresholding performance for multiple experiments AT_COMPARE_AUTOTHRESHOLD ( D , IMAGENAME ) D is a cell array of directory names to examine , and IMAGENAME is the image to process with the autothreshold function . No results are saved except to the plot This function takes additional arguments as name / value pairs : Parameter ( default ) | Description ------------------------------------------------------------------ N ( 3 ) | Number of rows of plots in each figure M ( 2 ) | Number of columns of plots in each figure labelmethod ( 'IMNAME#' ) | How to label the graphs . Methods include : | 'IMNAME#' : label with IMAGENAME and the exp # t_levels ([ 80 30 ]) | Threshold signal levels","title":"at_compare_autothreshold"},{"location":"reference/at_analysis/at_examine_rois.m/","text":"at_examine_rois \u00b6 AT_EXAMINE_ROIS - examine ROI sizes, intensity, overlaps AT_EXAMINE_ROIS(D, ROISETA, ROISETB, CLAAONB, ...)","title":"at_examine_rois"},{"location":"reference/at_analysis/at_examine_rois.m/#at_examine_rois","text":"AT_EXAMINE_ROIS - examine ROI sizes, intensity, overlaps AT_EXAMINE_ROIS(D, ROISETA, ROISETB, CLAAONB, ...)","title":"at_examine_rois"},{"location":"reference/at_analysis/at_examine_rois2.m/","text":"at_examine_rois2 \u00b6 AT_EXAMINE_ROIS - examine ROI sizes, intensity, overlaps AT_EXAMINE_ROIS(D, ROISETA, ROISETB, CLAAONB, ...)","title":"at_examine_rois2"},{"location":"reference/at_analysis/at_examine_rois2.m/#at_examine_rois2","text":"AT_EXAMINE_ROIS - examine ROI sizes, intensity, overlaps AT_EXAMINE_ROIS(D, ROISETA, ROISETB, CLAAONB, ...)","title":"at_examine_rois2"},{"location":"reference/at_colocalization/at_colocalization_editors_list.m/","text":"at_colocalization_editors_list \u00b6 AT_COLOCALIZATION_COLOCALIZATION_LIST - List of available AT_COLOCALIZATION editor functions S = AT_COLOCALIZATION_EDITORS LIST Returns in S a cell list of strings with the names of all available functions for editing CLA calculations in array tomography images","title":"at_colocalization_editors_list"},{"location":"reference/at_colocalization/at_colocalization_editors_list.m/#at_colocalization_editors_list","text":"AT_COLOCALIZATION_COLOCALIZATION_LIST - List of available AT_COLOCALIZATION editor functions S = AT_COLOCALIZATION_EDITORS LIST Returns in S a cell list of strings with the names of all available functions for editing CLA calculations in array tomography images","title":"at_colocalization_editors_list"},{"location":"reference/at_colocalization/at_colocalization_makers_list.m/","text":"at_colocalization_makers_list \u00b6 AT_COLOCALIZATION_MAKERS_LIST - List of available AT_COLOCALIZATION_MAKERS functions S = AT_COLOCALIZATION_MAKERS_LIST Returns in S a cell list of strings with the names of all available functions for making COLOCALIZATION analyses in array tomography images","title":"at_colocalization_makers_list"},{"location":"reference/at_colocalization/at_colocalization_makers_list.m/#at_colocalization_makers_list","text":"AT_COLOCALIZATION_MAKERS_LIST - List of available AT_COLOCALIZATION_MAKERS functions S = AT_COLOCALIZATION_MAKERS_LIST Returns in S a cell list of strings with the names of all available functions for making COLOCALIZATION analyses in array tomography images","title":"at_colocalization_makers_list"},{"location":"reference/at_colocalization/at_colocalization_editors/at_colocalization_neighbors.m/","text":"at_colocalization_neighbors \u00b6 AT_COLOCALIZATION_NEIGHBORS - Eliminate colocalizations that don ' t have at least N neighbors OUT = AT_COLOCALIZATION_NEIGHBORS ( ATD , INPUT_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters .","title":"at_colocalization_neighbors"},{"location":"reference/at_colocalization/at_colocalization_editors/at_colocalization_neighbors.m/#at_colocalization_neighbors","text":"AT_COLOCALIZATION_NEIGHBORS - Eliminate colocalizations that don ' t have at least N neighbors OUT = AT_COLOCALIZATION_NEIGHBORS ( ATD , INPUT_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters .","title":"at_colocalization_neighbors"},{"location":"reference/at_colocalization/at_colocalization_editors/at_colocalization_rethreshold.m/","text":"at_colocalization_rethreshold \u00b6 AT_COLOCALIZATION_RETHRESHOLD - Redo colocalization labeling by changing threshold OUT = AT_COLOCALIZATION_RETHRESHOLD ( ATD , INPUT_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters .","title":"at_colocalization_rethreshold"},{"location":"reference/at_colocalization/at_colocalization_editors/at_colocalization_rethreshold.m/#at_colocalization_rethreshold","text":"AT_COLOCALIZATION_RETHRESHOLD - Redo colocalization labeling by changing threshold OUT = AT_COLOCALIZATION_RETHRESHOLD ( ATD , INPUT_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters .","title":"at_colocalization_rethreshold"},{"location":"reference/at_colocalization/at_colocalization_makers/at_3colocalization_centerofmass.m/","text":"at_3colocalization_centerofmass \u00b6 AT_3COLOCALIZATION_CENTEROFMASS - Estimate colocalization by center - of - mass distance , triple OUT = AT_3COLOCALIZATION_CENTEROFMASS ( ATD , INPUT_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters .","title":"at_3colocalization_centerofmass"},{"location":"reference/at_colocalization/at_colocalization_makers/at_3colocalization_centerofmass.m/#at_3colocalization_centerofmass","text":"AT_3COLOCALIZATION_CENTEROFMASS - Estimate colocalization by center - of - mass distance , triple OUT = AT_3COLOCALIZATION_CENTEROFMASS ( ATD , INPUT_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters .","title":"at_3colocalization_centerofmass"},{"location":"reference/at_colocalization/at_colocalization_makers/at_3colocalization_shift.m/","text":"at_3colocalization_shift \u00b6 AT_3COLOCALIZATION_SHIFT - Calculate colocalized ROI triples OUT = AT_3COLOCALIZATION_SHIFT ( ATD , INPUT_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters .","title":"at_3colocalization_shift"},{"location":"reference/at_colocalization/at_colocalization_makers/at_3colocalization_shift.m/#at_3colocalization_shift","text":"AT_3COLOCALIZATION_SHIFT - Calculate colocalized ROI triples OUT = AT_3COLOCALIZATION_SHIFT ( ATD , INPUT_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters .","title":"at_3colocalization_shift"},{"location":"reference/at_colocalization/at_colocalization_makers/at_colocalization_centerofmass.m/","text":"at_colocalization_centerofmass \u00b6 AT_COLOCALIZATION_CENTEROFMASS - Estimate colocalization by center - of - mass distance OUT = AT_COLOCALIZATION_CENTEROFMASS ( ATD , INPUT_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters .","title":"at_colocalization_centerofmass"},{"location":"reference/at_colocalization/at_colocalization_makers/at_colocalization_centerofmass.m/#at_colocalization_centerofmass","text":"AT_COLOCALIZATION_CENTEROFMASS - Estimate colocalization by center - of - mass distance OUT = AT_COLOCALIZATION_CENTEROFMASS ( ATD , INPUT_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters .","title":"at_colocalization_centerofmass"},{"location":"reference/at_colocalization/at_colocalization_makers/at_colocalization_shift.m/","text":"at_colocalization_shift \u00b6 AT_COLOCALIZATION_SHIFT - Use BWCONNCOMP to compute ROIs from thresholded image OUT = AT_COLOCALIZATION_SHIFT ( ATD , INPUT_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters .","title":"at_colocalization_shift"},{"location":"reference/at_colocalization/at_colocalization_makers/at_colocalization_shift.m/#at_colocalization_shift","text":"AT_COLOCALIZATION_SHIFT - Use BWCONNCOMP to compute ROIs from thresholded image OUT = AT_COLOCALIZATION_SHIFT ( ATD , INPUT_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters .","title":"at_colocalization_shift"},{"location":"reference/at_colocalization/at_colocalization_makers/at_colocalization_shiftxyz.m/","text":"at_colocalization_shiftxyz \u00b6 AT_COLOCALIZATION_SHIFTXYZ - Use BWCONNCOMP to compute ROIs from thresholded image OUT = AT_COLOCALIZATION_SHIFTXYZ ( ATD , INPUT_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters .","title":"at_colocalization_shiftxyz"},{"location":"reference/at_colocalization/at_colocalization_makers/at_colocalization_shiftxyz.m/#at_colocalization_shiftxyz","text":"AT_COLOCALIZATION_SHIFTXYZ - Use BWCONNCOMP to compute ROIs from thresholded image OUT = AT_COLOCALIZATION_SHIFTXYZ ( ATD , INPUT_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters .","title":"at_colocalization_shiftxyz"},{"location":"reference/at_exporters/at_roi_sizes.m/","text":"at_roi_sizes \u00b6 AT_ROI_SIZES - for an ROI filename , return the ROI sizes ROI_SIZES = AT_ROI_SIZES ( FILENAME ) Returns an array of the ROI sizes In addition , writes the data to a file called FILENAME_roisize . xls .","title":"at_roi_sizes"},{"location":"reference/at_exporters/at_roi_sizes.m/#at_roi_sizes","text":"AT_ROI_SIZES - for an ROI filename , return the ROI sizes ROI_SIZES = AT_ROI_SIZES ( FILENAME ) Returns an array of the ROI sizes In addition , writes the data to a file called FILENAME_roisize . xls .","title":"at_roi_sizes"},{"location":"reference/at_image/at_image_info.m/","text":"at_image_info \u00b6 AT_IMAGE_INFO - Read in a information of a file for AT analysis IM = AT_IMAGE_INFO ( FILENAME ) Gets image info for an image file for AT analysis . At present , this function returns the Matlab IMFINFO structure for the first image , and adds a field ' number_of_frames ' , but could be expanded in the future .","title":"at_image_info"},{"location":"reference/at_image/at_image_info.m/#at_image_info","text":"AT_IMAGE_INFO - Read in a information of a file for AT analysis IM = AT_IMAGE_INFO ( FILENAME ) Gets image info for an image file for AT analysis . At present , this function returns the Matlab IMFINFO structure for the first image , and adds a field ' number_of_frames ' , but could be expanded in the future .","title":"at_image_info"},{"location":"reference/at_image/at_image_process_list.m/","text":"at_image_process_list \u00b6 AT_IMAGE_PROCESS_LIST - List of available AT_IMAGE_PROCESS functions S = AT_IMAGE_PROCESS_LIST Returns in S a cell list of strings with the names of all available functions for processing array tomography images","title":"at_image_process_list"},{"location":"reference/at_image/at_image_process_list.m/#at_image_process_list","text":"AT_IMAGE_PROCESS_LIST - List of available AT_IMAGE_PROCESS functions S = AT_IMAGE_PROCESS_LIST Returns in S a cell list of strings with the names of all available functions for processing array tomography images","title":"at_image_process_list"},{"location":"reference/at_image/at_image_read.m/","text":"at_image_read \u00b6 AT_IMAGE_READ - Read in a stacked image file for AT analysis IM = AT_IMAGE_READ ( FILENAME , FRAME_INDEX , ... ) Reads in FRAME_INDEX of a potentially multi stack image file for AT analysis . FILENAME is the name of the file , IM is the image output . In the future , this function may be able to handle different organizations ( like many TIF files representing a stack , etc ) . This function takes name / value pairs : Parameter ( default ) | Description ------------------------------------------------------- iminfo ( [] ) | Matlab image info returned from | IMFINFO","title":"at_image_read"},{"location":"reference/at_image/at_image_read.m/#at_image_read","text":"AT_IMAGE_READ - Read in a stacked image file for AT analysis IM = AT_IMAGE_READ ( FILENAME , FRAME_INDEX , ... ) Reads in FRAME_INDEX of a potentially multi stack image file for AT analysis . FILENAME is the name of the file , IM is the image output . In the future , this function may be able to handle different organizations ( like many TIF files representing a stack , etc ) . This function takes name / value pairs : Parameter ( default ) | Description ------------------------------------------------------- iminfo ( [] ) | Matlab image info returned from | IMFINFO","title":"at_image_read"},{"location":"reference/at_image/at_image_process/Contents.m/","text":"Contents \u00b6 This directory contains all image plug - ins that can process images for AT . Each function should have the following form : [ OUT ] = ATI_IMAGE_PROCESSOR ( AD , INPUT_DIRNAME , OUTPUT_DIRNAME , PARAMETERS ) If the function is called with no arguments , then out is a 2 element cell array of strings ; OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of text options that one can pass for PARAMETERS , such as 'choose_graphical' , which might allow the user to graphically choose the parameters . The option 'choose' should be supported , and prompt the user to make some choice about the parameter in a user - guided manner . AD is the ATDIR object that manages the experiment directory . INPUT_DIRNAME and OUTPUT_DIRNAME are names of directories within the 'images' subfolder . The function is responsible for writing the following files in the OUTPUT_DIRNAME directory : image . ext - the image file , in a format readable by Matlab ' s imread ( ext is variable ) history . mat - a structure giving the history of the operations on this image parent . txt - the name of the parent image directory ( if applicable )","title":"Contents"},{"location":"reference/at_image/at_image_process/Contents.m/#contents","text":"This directory contains all image plug - ins that can process images for AT . Each function should have the following form : [ OUT ] = ATI_IMAGE_PROCESSOR ( AD , INPUT_DIRNAME , OUTPUT_DIRNAME , PARAMETERS ) If the function is called with no arguments , then out is a 2 element cell array of strings ; OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of text options that one can pass for PARAMETERS , such as 'choose_graphical' , which might allow the user to graphically choose the parameters . The option 'choose' should be supported , and prompt the user to make some choice about the parameter in a user - guided manner . AD is the ATDIR object that manages the experiment directory . INPUT_DIRNAME and OUTPUT_DIRNAME are names of directories within the 'images' subfolder . The function is responsible for writing the following files in the OUTPUT_DIRNAME directory : image . ext - the image file , in a format readable by Matlab ' s imread ( ext is variable ) history . mat - a structure giving the history of the operations on this image parent . txt - the name of the parent image directory ( if applicable )","title":"Contents"},{"location":"reference/at_image/at_image_process/at_image_blur.m/","text":"at_image_blur \u00b6 AT_IMAGE_BLUR - Threshold an image and store results OUT = AT_IMAGE_BLUR ( ATD , INPUT_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters .","title":"at_image_blur"},{"location":"reference/at_image/at_image_process/at_image_blur.m/#at_image_blur","text":"AT_IMAGE_BLUR - Threshold an image and store results OUT = AT_IMAGE_BLUR ( ATD , INPUT_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters .","title":"at_image_blur"},{"location":"reference/at_image/at_image_process/at_image_doublethreshold.m/","text":"at_image_doublethreshold \u00b6 AT_IMAGE_DOUBLETHRESHOLD - Threshold an image and store results OUT = AT_IMAGE_DOUBLETHRESHOLD ( ATD , INPUT_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters . AT_IMAGE_DOUBLETHRESHOLD has several parameters : | Parameter ( default ) | Description | |------------------------------------|---------------------------------------| | threshold1 ( 95 ) | Value of threshold1 | | threshold2 ( 75 ) | Value of threshold2 | | threshold_units ( ' percentile ' ) | Unit of threshold ( can be ' raw ' or | | | ' percentile ' | | connectivity ( 26 ) | Connectivity for ROI finding |","title":"at_image_doublethreshold"},{"location":"reference/at_image/at_image_process/at_image_doublethreshold.m/#at_image_doublethreshold","text":"AT_IMAGE_DOUBLETHRESHOLD - Threshold an image and store results OUT = AT_IMAGE_DOUBLETHRESHOLD ( ATD , INPUT_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters . AT_IMAGE_DOUBLETHRESHOLD has several parameters : | Parameter ( default ) | Description | |------------------------------------|---------------------------------------| | threshold1 ( 95 ) | Value of threshold1 | | threshold2 ( 75 ) | Value of threshold2 | | threshold_units ( ' percentile ' ) | Unit of threshold ( can be ' raw ' or | | | ' percentile ' | | connectivity ( 26 ) | Connectivity for ROI finding |","title":"at_image_doublethreshold"},{"location":"reference/at_image/at_image_process/at_image_doublethresholdmask.m/","text":"at_image_doublethresholdmask \u00b6 AT_IMAGE_DOUBLETHRESHOLDMASK - Threshold an image based on a mask and store results OUT = AT_IMAGE_DOUBLETHRESHOLD ( ATD , INPUT_ITEMNAME , MASK_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters . AT_IMAGE_DOUBLETHRESHOLD has several parameters: | Parameter ( default ) | Description | |------------------------------------|---------------------------------------| | threshold1 ( 95 ) | Value of threshold1 | | threshold2 ( 75 ) | Value of threshold2 | | threshold_units (' percentile ') | Unit of threshold ( can be ' raw ' or | | | ' percentile ' | | mask_pixels_set_in_image ( 65e3 ) | Value to assign pixels in raw image | | | of pixels that are positive in mask | | connectivity ( 26 ) | Connectivity for ROI finding |","title":"at_image_doublethresholdmask"},{"location":"reference/at_image/at_image_process/at_image_doublethresholdmask.m/#at_image_doublethresholdmask","text":"AT_IMAGE_DOUBLETHRESHOLDMASK - Threshold an image based on a mask and store results OUT = AT_IMAGE_DOUBLETHRESHOLD ( ATD , INPUT_ITEMNAME , MASK_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters . AT_IMAGE_DOUBLETHRESHOLD has several parameters: | Parameter ( default ) | Description | |------------------------------------|---------------------------------------| | threshold1 ( 95 ) | Value of threshold1 | | threshold2 ( 75 ) | Value of threshold2 | | threshold_units (' percentile ') | Unit of threshold ( can be ' raw ' or | | | ' percentile ' | | mask_pixels_set_in_image ( 65e3 ) | Value to assign pixels in raw image | | | of pixels that are positive in mask | | connectivity ( 26 ) | Connectivity for ROI finding |","title":"at_image_doublethresholdmask"},{"location":"reference/at_image/at_image_process/at_image_threshold.m/","text":"at_image_threshold \u00b6 AT_IMAGE_THRESHOLD - Threshold an image and store results OUT = AT_IMAGE_THRESHOLD ( ATD , INPUT_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters .","title":"at_image_threshold"},{"location":"reference/at_image/at_image_process/at_image_threshold.m/#at_image_threshold","text":"AT_IMAGE_THRESHOLD - Threshold an image and store results OUT = AT_IMAGE_THRESHOLD ( ATD , INPUT_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters .","title":"at_image_threshold"},{"location":"reference/at_image/at_image_process/at_image_thresholdimport.m/","text":"at_image_thresholdimport \u00b6 AT_IMAGE_THRESHOLDIMPORT - Import threshold data for an image from an external image OUT = AT_IMAGE_THRESHOLDIMPOT ( ATD , INPUT_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters .","title":"at_image_thresholdimport"},{"location":"reference/at_image/at_image_process/at_image_thresholdimport.m/#at_image_thresholdimport","text":"AT_IMAGE_THRESHOLDIMPORT - Import threshold data for an image from an external image OUT = AT_IMAGE_THRESHOLDIMPOT ( ATD , INPUT_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters .","title":"at_image_thresholdimport"},{"location":"reference/at_pipelines/at_clean_pipeline.m/","text":"at_clean_pipeline \u00b6 AT_CLEAN_PIPELINE - cleans pipeline files AT_CLEANPIPELINE ( ATD , PIPELINEPREFIX ) Deletes the ATD items that start with PIPELINEPREFIX . Use with caution , as this deletes many objects . You can test with 'donotdelete' set to 1 to see what will be deleted . Several parameters can be altered by name / value pairs ( see help NAMEVALUEPAIR ). Parameter ( default ) | Description -------------------------------------------------------------------- donotdelete ( 0 ) | 0 / 1 If 1 , then don 't actually do the deleting, | just report what would have been done Example: atd = at_dir([MYEXPERIMENTPATH]); at_clean_pipeline(atd, ' PSDsv1 ' );","title":"at_clean_pipeline"},{"location":"reference/at_pipelines/at_clean_pipeline.m/#at_clean_pipeline","text":"AT_CLEAN_PIPELINE - cleans pipeline files AT_CLEANPIPELINE ( ATD , PIPELINEPREFIX ) Deletes the ATD items that start with PIPELINEPREFIX . Use with caution , as this deletes many objects . You can test with 'donotdelete' set to 1 to see what will be deleted . Several parameters can be altered by name / value pairs ( see help NAMEVALUEPAIR ). Parameter ( default ) | Description -------------------------------------------------------------------- donotdelete ( 0 ) | 0 / 1 If 1 , then don 't actually do the deleting, | just report what would have been done Example: atd = at_dir([MYEXPERIMENTPATH]); at_clean_pipeline(atd, ' PSDsv1 ' );","title":"at_clean_pipeline"},{"location":"reference/at_pipelines/vh_autothreshold_plot.m/","text":"vh_autothreshold_plot \u00b6 VH_AUTOTHRESHOLD_PLOT - Steve 's first pipeline piece / Nelson lab - Van Hooser lab VH_AUTOTHRESHOLD_PLOT(ATD, STARTIMAGENAME, ...) Plots the results of autothresholding in the current axes. Several parameters can be altered by name/value pairs (see help NAMEVALUEPAIR). Parameter (default) | Description -------------------------------------------------------------------- connectivity (26) | Connectivity for ROIs t_levels ([80 30]) | Threshold levels for at_estimatethreshold Example: atd = at_dir([MYEXPERIMENTPATH]); vh_auththreshold_plot(atd, ' PSD ' );","title":"vh_autothreshold_plot"},{"location":"reference/at_pipelines/vh_autothreshold_plot.m/#vh_autothreshold_plot","text":"VH_AUTOTHRESHOLD_PLOT - Steve 's first pipeline piece / Nelson lab - Van Hooser lab VH_AUTOTHRESHOLD_PLOT(ATD, STARTIMAGENAME, ...) Plots the results of autothresholding in the current axes. Several parameters can be altered by name/value pairs (see help NAMEVALUEPAIR). Parameter (default) | Description -------------------------------------------------------------------- connectivity (26) | Connectivity for ROIs t_levels ([80 30]) | Threshold levels for at_estimatethreshold Example: atd = at_dir([MYEXPERIMENTPATH]); vh_auththreshold_plot(atd, ' PSD ' );","title":"vh_autothreshold_plot"},{"location":"reference/at_pipelines/vh_coloc1.m/","text":"vh_coloc1 \u00b6 VH_COLOC1 - Steve 's first colocalization pipeline piece / Nelson lab - Van Hooser lab VH_COLOC1(ATD, STARTIMAGENAME, OUTNAME, ...) Runs a sub pipeline (VH colocalization version 1) pipeline on ROIs A with name ROISETA and ROIs B with name ROISETB and generate a co-localization called OUTNAME. Operators on AT_DIR object ATD. Assumes that the image is already scaled (Step 0). The output will be named [outname ' _ * ']. Several parameters can be altered by name/value pairs (see help NAMEVALUEPAIR). Parameter (default) | Description -------------------------------------------------------------------- overlap_threshold (0.01) | Overlap threshold for colocalization xyshift ([-2 : 2]) | Colocalization shifts to examine in X/Y zshift ([0]) | Colocalization shifts to examine in Z delete_old_output (1) | Delete any old output before we start | (uses AT_CLEAN_PIPELINE) Example: atd = at_dir([MYEXPERIMENTPATH]); vh_coloc1(atd, ' PSD ', ' PSDsv1 ' );","title":"vh_coloc1"},{"location":"reference/at_pipelines/vh_coloc1.m/#vh_coloc1","text":"VH_COLOC1 - Steve 's first colocalization pipeline piece / Nelson lab - Van Hooser lab VH_COLOC1(ATD, STARTIMAGENAME, OUTNAME, ...) Runs a sub pipeline (VH colocalization version 1) pipeline on ROIs A with name ROISETA and ROIs B with name ROISETB and generate a co-localization called OUTNAME. Operators on AT_DIR object ATD. Assumes that the image is already scaled (Step 0). The output will be named [outname ' _ * ']. Several parameters can be altered by name/value pairs (see help NAMEVALUEPAIR). Parameter (default) | Description -------------------------------------------------------------------- overlap_threshold (0.01) | Overlap threshold for colocalization xyshift ([-2 : 2]) | Colocalization shifts to examine in X/Y zshift ([0]) | Colocalization shifts to examine in Z delete_old_output (1) | Delete any old output before we start | (uses AT_CLEAN_PIPELINE) Example: atd = at_dir([MYEXPERIMENTPATH]); vh_coloc1(atd, ' PSD ', ' PSDsv1 ' );","title":"vh_coloc1"},{"location":"reference/at_pipelines/vh_filter2tbrightness.m/","text":"vh_filter2tbrightness \u00b6 VH-FILTER2BRIGHTNESS","title":"vh_filter2tbrightness"},{"location":"reference/at_pipelines/vh_filter2tbrightness.m/#vh_filter2tbrightness","text":"VH-FILTER2BRIGHTNESS","title":"vh_filter2tbrightness"},{"location":"reference/at_pipelines/vh_groundtruthcompare.m/","text":"vh_groundtruthcompare \u00b6 VH_vh_groundtruthcompare - Convert ROIs that have been placed in image files into actual AT ROIs VH_vh_groundtruthcompare ( ATD , computerroi , maskregion_rois , groundtruthprefix , ...) Performs ground truth correspondence analysis for all available ground truth datasets . Several parameters can be altered by name / value pairs ( see help NAMEVALUEPAIR ). Parameter ( default ) | Description -------------------------------------------------------------------- Example : atd = at_dir ( [ MYEXPERIMENTPATH ] ); vh_groundtruthcompare ( atd , 'PSD_DECsv1' , 'spine_ROI_DLW)ROI' , 'PSD_ROI_' );","title":"vh_groundtruthcompare"},{"location":"reference/at_pipelines/vh_groundtruthcompare.m/#vh_groundtruthcompare","text":"VH_vh_groundtruthcompare - Convert ROIs that have been placed in image files into actual AT ROIs VH_vh_groundtruthcompare ( ATD , computerroi , maskregion_rois , groundtruthprefix , ...) Performs ground truth correspondence analysis for all available ground truth datasets . Several parameters can be altered by name / value pairs ( see help NAMEVALUEPAIR ). Parameter ( default ) | Description -------------------------------------------------------------------- Example : atd = at_dir ( [ MYEXPERIMENTPATH ] ); vh_groundtruthcompare ( atd , 'PSD_DECsv1' , 'spine_ROI_DLW)ROI' , 'PSD_ROI_' );","title":"vh_groundtruthcompare"},{"location":"reference/at_pipelines/vh_imageroi2roiroi.m/","text":"vh_imageroi2roiroi \u00b6 VH_IMAGEROI2ROIROI - Convert ROIs that have been placed in image files into actual AT ROIs VH_IMAGEROI2ROIROI ( ATD , ...) Runs a pipeline ( VH version 1 ) that looks for image files that define ROIs on the AT_DIR object ATD . It examines all image files that have the name SOMETHING_ROI_SOMETHING and makes ROIs that have the same name . The output will be named [ outname '_*' ] . Several parameters can be altered by name / value pairs ( see help NAMEVALUEPAIR ). Parameter ( default ) | Description -------------------------------------------------------------------- connectivity ( 26 ) | Connectivity for ROIs do_resegemnt ( 1 ) | Resegment the ROIs that come through Example : atd = at_dir ( [ MYEXPERIMENTPATH ] ); vh_imageroi2roiroi ( atd );","title":"vh_imageroi2roiroi"},{"location":"reference/at_pipelines/vh_imageroi2roiroi.m/#vh_imageroi2roiroi","text":"VH_IMAGEROI2ROIROI - Convert ROIs that have been placed in image files into actual AT ROIs VH_IMAGEROI2ROIROI ( ATD , ...) Runs a pipeline ( VH version 1 ) that looks for image files that define ROIs on the AT_DIR object ATD . It examines all image files that have the name SOMETHING_ROI_SOMETHING and makes ROIs that have the same name . The output will be named [ outname '_*' ] . Several parameters can be altered by name / value pairs ( see help NAMEVALUEPAIR ). Parameter ( default ) | Description -------------------------------------------------------------------- connectivity ( 26 ) | Connectivity for ROIs do_resegemnt ( 1 ) | Resegment the ROIs that come through Example : atd = at_dir ( [ MYEXPERIMENTPATH ] ); vh_imageroi2roiroi ( atd );","title":"vh_imageroi2roiroi"},{"location":"reference/at_pipelines/vh_intensityvolume.m/","text":"vh_intensityvolume \u00b6 VH_INTENSITYVOLUME - Steve 's first colocalization pipeline piece / Nelson lab - Van Hooser lab VH_INTENSITYVOLUME(ATD, ROISETA, OUTNAME, ...) Runs a sub pipeline (Max Intensity and Volume Filter) on ROISETA and generates a new set of ROIs with name OUTNAME. Operates on AT_DIR object ATD. The output will be named [outname ' _ * ']. Several parameters can be altered by name/value pairs (see help NAMEVALUEPAIR). Parameter (default) | Description -------------------------------------------------------------------- min_intensity_thresh (1) | Which threshold of double threshold to use max_intensity_value (Inf) | Should we filter a maximum value? min_volume (4) | Minimum volume allowed max_volume (Inf) | Maximum volume allowed delete_old_output (1) | Delete any old output before we start | (uses AT_CLEAN_PIPELINE) Example: atd = at_dir([MYEXPERIMENTPATH]); vh_intensityvolume(atd, ' PSD ', ' PSDsv1 ' );","title":"vh_intensityvolume"},{"location":"reference/at_pipelines/vh_intensityvolume.m/#vh_intensityvolume","text":"VH_INTENSITYVOLUME - Steve 's first colocalization pipeline piece / Nelson lab - Van Hooser lab VH_INTENSITYVOLUME(ATD, ROISETA, OUTNAME, ...) Runs a sub pipeline (Max Intensity and Volume Filter) on ROISETA and generates a new set of ROIs with name OUTNAME. Operates on AT_DIR object ATD. The output will be named [outname ' _ * ']. Several parameters can be altered by name/value pairs (see help NAMEVALUEPAIR). Parameter (default) | Description -------------------------------------------------------------------- min_intensity_thresh (1) | Which threshold of double threshold to use max_intensity_value (Inf) | Should we filter a maximum value? min_volume (4) | Minimum volume allowed max_volume (Inf) | Maximum volume allowed delete_old_output (1) | Delete any old output before we start | (uses AT_CLEAN_PIPELINE) Example: atd = at_dir([MYEXPERIMENTPATH]); vh_intensityvolume(atd, ' PSD ', ' PSDsv1 ' );","title":"vh_intensityvolume"},{"location":"reference/at_pipelines/vh_pipepiece1.m/","text":"vh_pipepiece1 \u00b6 VH_PIPEPIECE1 - Steve 's first pipeline piece / Nelson lab - Van Hooser lab VH_PIPELINE1(ATD, STARTIMAGENAME, OUTNAME, ...) Runs a sub pipeline (VH version 1) pipeline on an image with STARTIMAGENAME in the AT_DIR object ATD. Assumes that the image is already scaled (Step 0). For Step 1: the image is examined by AT_ESTIMATETHRESHOLDS. A new image called [outname ' _th2 '] is created with at_image_doublethreshold Step 2: ROIs are made [outname ' _roi '] Step 3, Watershed is applied Step 4: Volume filter (use 0, Inf to do nothing) The output will be named [outname ' _ * ']. Several parameters can be altered by name/value pairs (see help NAMEVALUEPAIR). Parameter (default) | Description -------------------------------------------------------------------- plotthresholdestimate (0) | Should we plot the threshold estimate? connectivity (26) | Connectivity for ROIs volume_filter_low (0) | Low setting for volume filter volume_filter_high (Inf) | High setting for volume filter t_levels ([80 30]) | Threshold levels for autothresholder delete_old_output (1) | Delete any old output before we start | (uses AT_CLEAN_PIPELINE) Example: atd = at_dir([MYEXPERIMENTPATH]); vh_pipepiece1(atd, ' PSD ', ' PSDsv1 ' );","title":"vh_pipepiece1"},{"location":"reference/at_pipelines/vh_pipepiece1.m/#vh_pipepiece1","text":"VH_PIPEPIECE1 - Steve 's first pipeline piece / Nelson lab - Van Hooser lab VH_PIPELINE1(ATD, STARTIMAGENAME, OUTNAME, ...) Runs a sub pipeline (VH version 1) pipeline on an image with STARTIMAGENAME in the AT_DIR object ATD. Assumes that the image is already scaled (Step 0). For Step 1: the image is examined by AT_ESTIMATETHRESHOLDS. A new image called [outname ' _th2 '] is created with at_image_doublethreshold Step 2: ROIs are made [outname ' _roi '] Step 3, Watershed is applied Step 4: Volume filter (use 0, Inf to do nothing) The output will be named [outname ' _ * ']. Several parameters can be altered by name/value pairs (see help NAMEVALUEPAIR). Parameter (default) | Description -------------------------------------------------------------------- plotthresholdestimate (0) | Should we plot the threshold estimate? connectivity (26) | Connectivity for ROIs volume_filter_low (0) | Low setting for volume filter volume_filter_high (Inf) | High setting for volume filter t_levels ([80 30]) | Threshold levels for autothresholder delete_old_output (1) | Delete any old output before we start | (uses AT_CLEAN_PIPELINE) Example: atd = at_dir([MYEXPERIMENTPATH]); vh_pipepiece1(atd, ' PSD ', ' PSDsv1 ' );","title":"vh_pipepiece1"},{"location":"reference/at_pipelines/vh_pipepiece2.m/","text":"vh_pipepiece2 \u00b6 VH_PIPEPIECE1 - Steve 's first pipeline piece / Nelson lab - Van Hooser lab VH_PIPELINE1(ATD, STARTIMAGENAME, OUTNAME, ...) Runs a sub pipeline (VH version 1) pipeline on an image with STARTIMAGENAME in the AT_DIR object ATD. Assumes that the image is already scaled (Step 0). For Step 1: the image is examined by AT_ESTIMATETHRESHOLDS. A new image called [outname ' _th2 '] is created with at_image_doublethreshold Step 2: ROIs are made [outname ' _roi '] Step 3: Volume filter (use 0, Inf to do nothing) The output will be named [outname ' _ * ']. Several parameters can be altered by name/value pairs (see help NAMEVALUEPAIR). Parameter (default) | Description -------------------------------------------------------------------- plotthresholdestimate (0) | Should we plot the threshold estimate? connectivity (26) | Connectivity for ROIs volume_filter_low (0) | Low setting for volume filter volume_filter_high (Inf) | High setting for volume filter t_levels ([80 30]) | Threshold levels for autothresholder delete_old_output (1) | Delete any old output before we start | (uses AT_CLEAN_PIPELINE) Example: atd = at_dir([MYEXPERIMENTPATH]); vh_pipepiece1(atd, ' PSD ', ' PSDsv1 ' );","title":"vh_pipepiece2"},{"location":"reference/at_pipelines/vh_pipepiece2.m/#vh_pipepiece2","text":"VH_PIPEPIECE1 - Steve 's first pipeline piece / Nelson lab - Van Hooser lab VH_PIPELINE1(ATD, STARTIMAGENAME, OUTNAME, ...) Runs a sub pipeline (VH version 1) pipeline on an image with STARTIMAGENAME in the AT_DIR object ATD. Assumes that the image is already scaled (Step 0). For Step 1: the image is examined by AT_ESTIMATETHRESHOLDS. A new image called [outname ' _th2 '] is created with at_image_doublethreshold Step 2: ROIs are made [outname ' _roi '] Step 3: Volume filter (use 0, Inf to do nothing) The output will be named [outname ' _ * ']. Several parameters can be altered by name/value pairs (see help NAMEVALUEPAIR). Parameter (default) | Description -------------------------------------------------------------------- plotthresholdestimate (0) | Should we plot the threshold estimate? connectivity (26) | Connectivity for ROIs volume_filter_low (0) | Low setting for volume filter volume_filter_high (Inf) | High setting for volume filter t_levels ([80 30]) | Threshold levels for autothresholder delete_old_output (1) | Delete any old output before we start | (uses AT_CLEAN_PIPELINE) Example: atd = at_dir([MYEXPERIMENTPATH]); vh_pipepiece1(atd, ' PSD ', ' PSDsv1 ' );","title":"vh_pipepiece2"},{"location":"reference/at_pipelines/vh_rawhuman2filled.m/","text":"vh_rawhuman2filled \u00b6 VH_RAWHUMAN2FILLED - VH_RAWHUMAN2FILLED ( ATD , STARTIMAGENAME , MASKIMAGENAME , OUTNAME , ...) Runs a sub pipeline ( VH version 1 ) pipeline on an image with STARTIMAGENAME in the AT_DIR object ATD . Assumes that the image is already scaled ( Step 0 ). For Step 1 : the image is examined by AT_ESTIMATETHRESHOLDS . A new image called [ outname '_th2mask' ] is created with at_image_doublethreshold Step 2 : ROIs are made [ outname '_roi' ] Step 3 , Watershed is applied Step 4 : Volume filter ( use 0 , Inf to do nothing ) The output will be named [ outname '_*' ] . Several parameters can be altered by name / value pairs ( see help NAMEVALUEPAIR ). Parameter ( default ) | Description -------------------------------------------------------------------- plotthresholdestimate ( 0 ) | Should we plot the threshold estimate ? connectivity ( 26 ) | Connectivity for ROIs volume_filter_low ( 0 ) | Low setting for volume filter volume_filter_high ( Inf ) | High setting for volume filter t_levels ( [ 80 30 ] ) | Threshold levels for autothresholder delete_old_output ( 1 ) | Delete any old output before we start | ( uses AT_CLEAN_PIPELINE ) Example : atd = at_dir ( [ MYEXPERIMENTPATH ] ); vh_pipepiece1 ( atd , 'PSD' , 'PSDsv1' );","title":"vh_rawhuman2filled"},{"location":"reference/at_pipelines/vh_rawhuman2filled.m/#vh_rawhuman2filled","text":"VH_RAWHUMAN2FILLED - VH_RAWHUMAN2FILLED ( ATD , STARTIMAGENAME , MASKIMAGENAME , OUTNAME , ...) Runs a sub pipeline ( VH version 1 ) pipeline on an image with STARTIMAGENAME in the AT_DIR object ATD . Assumes that the image is already scaled ( Step 0 ). For Step 1 : the image is examined by AT_ESTIMATETHRESHOLDS . A new image called [ outname '_th2mask' ] is created with at_image_doublethreshold Step 2 : ROIs are made [ outname '_roi' ] Step 3 , Watershed is applied Step 4 : Volume filter ( use 0 , Inf to do nothing ) The output will be named [ outname '_*' ] . Several parameters can be altered by name / value pairs ( see help NAMEVALUEPAIR ). Parameter ( default ) | Description -------------------------------------------------------------------- plotthresholdestimate ( 0 ) | Should we plot the threshold estimate ? connectivity ( 26 ) | Connectivity for ROIs volume_filter_low ( 0 ) | Low setting for volume filter volume_filter_high ( Inf ) | High setting for volume filter t_levels ( [ 80 30 ] ) | Threshold levels for autothresholder delete_old_output ( 1 ) | Delete any old output before we start | ( uses AT_CLEAN_PIPELINE ) Example : atd = at_dir ( [ MYEXPERIMENTPATH ] ); vh_pipepiece1 ( atd , 'PSD' , 'PSDsv1' );","title":"vh_rawhuman2filled"},{"location":"reference/at_pipelines/vh_roicomparepipe.m/","text":"vh_roicomparepipe \u00b6 VH_ROICOMPAREPIPE - Convert ROIs that have been placed in image files into actual AT ROIs VH_ROICOMPAREPIPE ( ATD , ...) Runs a pipeline ( VH version 1 ) that looks for image files that define ROIs on the AT_DIR object ATD . It examines all image files that have the name SOMETHING_ROI_SOMETHING and makes ROIs that have the same name . The output will be named [ outname '_*' ] . Several parameters can be altered by name / value pairs ( see help NAMEVALUEPAIR ). Parameter ( default ) | Description -------------------------------------------------------------------- overlap_threshold ( 0.01 ) | Overlap threshold for colocalization xyshift ( [ 0 ] ) | Colocalization shifts to examine in X / Y zshift ( [ 0 ] ) | Colocalization shifts to examine in Z delete_old_output ( 1 ) | Delete any old output before we start | ( uses AT_CLEAN_PIPELINE ) Example : atd = at_dir ( [ MYEXPERIMENTPATH ] ); vh_roicomparepipe ( atd , 'PSD_ROI_' , 'PSDsv1' );","title":"vh_roicomparepipe"},{"location":"reference/at_pipelines/vh_roicomparepipe.m/#vh_roicomparepipe","text":"VH_ROICOMPAREPIPE - Convert ROIs that have been placed in image files into actual AT ROIs VH_ROICOMPAREPIPE ( ATD , ...) Runs a pipeline ( VH version 1 ) that looks for image files that define ROIs on the AT_DIR object ATD . It examines all image files that have the name SOMETHING_ROI_SOMETHING and makes ROIs that have the same name . The output will be named [ outname '_*' ] . Several parameters can be altered by name / value pairs ( see help NAMEVALUEPAIR ). Parameter ( default ) | Description -------------------------------------------------------------------- overlap_threshold ( 0.01 ) | Overlap threshold for colocalization xyshift ( [ 0 ] ) | Colocalization shifts to examine in X / Y zshift ( [ 0 ] ) | Colocalization shifts to examine in Z delete_old_output ( 1 ) | Delete any old output before we start | ( uses AT_CLEAN_PIPELINE ) Example : atd = at_dir ( [ MYEXPERIMENTPATH ] ); vh_roicomparepipe ( atd , 'PSD_ROI_' , 'PSDsv1' );","title":"vh_roicomparepipe"},{"location":"reference/at_pipelines/wise_pipeline1.m/","text":"wise_pipeline1 \u00b6 WISE_PIPELINE1 - Derek Wise pipeline 1 / Nelson lab - Van Hooser lab WISE_PIPELINE1 ( ATD , STARTIMAGENAME , OUTNAME , ...) Runs the Wise ( version 1 ) pipeline on an image with STARTIMAGENAME in the AT_DIR object ATD . For Step 1 , scaling is applied ( not implemented yet ). For Step 2 , a threshold is applied . For Step 3 , make the ROIs . For Step 4 , apply a volume filter ( use 0 , Inf to do nothing ) For Step 5 , apply the watershed resegmentation The output will be named [ startImageName '_' outname '_wp1_roivfres' ] . Several parameters can be altered by name / value pairs ( see help NAMEVALUEPAIR ). Parameter ( default ) | Description -------------------------------------------------------------------- threshold ( 1250 ) | Threshold for pixel detection connectivity ( 26 ) | Connectivity for ROIs volume_filter_low ( 0 ) | Low setting for volume filter volume_filter_high ( Inf ) | High setting for volume filter Example : atd = at_dir ( [ MYEXPERIMENTPATH ] ); wise_pipelin1 ( atd , 'PSD95chan' , 'PSDwise1275' , 'threshold' , 1275 );","title":"wise_pipeline1"},{"location":"reference/at_pipelines/wise_pipeline1.m/#wise_pipeline1","text":"WISE_PIPELINE1 - Derek Wise pipeline 1 / Nelson lab - Van Hooser lab WISE_PIPELINE1 ( ATD , STARTIMAGENAME , OUTNAME , ...) Runs the Wise ( version 1 ) pipeline on an image with STARTIMAGENAME in the AT_DIR object ATD . For Step 1 , scaling is applied ( not implemented yet ). For Step 2 , a threshold is applied . For Step 3 , make the ROIs . For Step 4 , apply a volume filter ( use 0 , Inf to do nothing ) For Step 5 , apply the watershed resegmentation The output will be named [ startImageName '_' outname '_wp1_roivfres' ] . Several parameters can be altered by name / value pairs ( see help NAMEVALUEPAIR ). Parameter ( default ) | Description -------------------------------------------------------------------- threshold ( 1250 ) | Threshold for pixel detection connectivity ( 26 ) | Connectivity for ROIs volume_filter_low ( 0 ) | Low setting for volume filter volume_filter_high ( Inf ) | High setting for volume filter Example : atd = at_dir ( [ MYEXPERIMENTPATH ] ); wise_pipelin1 ( atd , 'PSD95chan' , 'PSDwise1275' , 'threshold' , 1275 );","title":"wise_pipeline1"},{"location":"reference/at_pipelines/specific_studies/wiseetal.m/","text":"wiseetal \u00b6 wiseetal.m is not a valid MATLAB file.","title":"wiseetal"},{"location":"reference/at_pipelines/specific_studies/wiseetal.m/#wiseetal","text":"wiseetal.m is not a valid MATLAB file.","title":"wiseetal"},{"location":"reference/at_pipelines/specific_studies/wiseetal_expandedhuman.m/","text":"wiseetal_expandedhuman \u00b6 version 1 only pays attention to 80","title":"wiseetal_expandedhuman"},{"location":"reference/at_pipelines/specific_studies/wiseetal_expandedhuman.m/#wiseetal_expandedhuman","text":"version 1 only pays attention to 80","title":"wiseetal_expandedhuman"},{"location":"reference/at_pipelines/specific_studies/wiseetal_finaltpfp.m/","text":"wiseetal_finaltpfp \u00b6 wiseetal_finaltpfp is a function. out = wiseetal_finaltpfp(s, algor, vol_range, N_range)","title":"wiseetal_finaltpfp"},{"location":"reference/at_pipelines/specific_studies/wiseetal_finaltpfp.m/#wiseetal_finaltpfp","text":"wiseetal_finaltpfp is a function. out = wiseetal_finaltpfp(s, algor, vol_range, N_range)","title":"wiseetal_finaltpfp"},{"location":"reference/at_pipelines/specific_studies/wiseetal_finaltpfpVG.m/","text":"wiseetal_finaltpfpVG \u00b6 wiseetal_finaltpfpVG is a function. out = wiseetal_finaltpfpVG(s, algor, vol_range, N_range)","title":"wiseetal_finaltpfpVG"},{"location":"reference/at_pipelines/specific_studies/wiseetal_finaltpfpVG.m/#wiseetal_finaltpfpvg","text":"wiseetal_finaltpfpVG is a function. out = wiseetal_finaltpfpVG(s, algor, vol_range, N_range)","title":"wiseetal_finaltpfpVG"},{"location":"reference/at_pipelines/specific_studies/wiseetal_gt_falsepositive_matches.m/","text":"wiseetal_gt_falsepositive_matches \u00b6 WISEETAL_GT_FALSEPOSITIVE_MATCHES - calculate false positive matches [ INDEXES , GOOD_GT ] = WISEETAL_GT_FALSEPOSITIVE_MATCHES ( GT_STRUCT ) Given a ground - truth structure ( such as that output by AT_GROUNDTRUTHCORRESPONDENCE ) this function calculates the index of each computer - generated ROI that has the most overlap with each ground - truth ROIs . Ground - truth ROIs are filtered for those that are at least as bright as the highest first threshold . This function also takes name / value pairs that modify its behavior ( see ` help namevaluepair ` ) : -------------------------------------------------- _ ----------------------------------| | Parameter ( default ) | Description | |---------------------------------|--------------------------------------------------| | overlap_fraction_false_positive | The fraction that a computer - generated ROI must | | ( 0 . 01 ) | overlap a human - generated ROI mark to be a match | |---------------------------------|--------------------------------------------------|","title":"wiseetal_gt_falsepositive_matches"},{"location":"reference/at_pipelines/specific_studies/wiseetal_gt_falsepositive_matches.m/#wiseetal_gt_falsepositive_matches","text":"WISEETAL_GT_FALSEPOSITIVE_MATCHES - calculate false positive matches [ INDEXES , GOOD_GT ] = WISEETAL_GT_FALSEPOSITIVE_MATCHES ( GT_STRUCT ) Given a ground - truth structure ( such as that output by AT_GROUNDTRUTHCORRESPONDENCE ) this function calculates the index of each computer - generated ROI that has the most overlap with each ground - truth ROIs . Ground - truth ROIs are filtered for those that are at least as bright as the highest first threshold . This function also takes name / value pairs that modify its behavior ( see ` help namevaluepair ` ) : -------------------------------------------------- _ ----------------------------------| | Parameter ( default ) | Description | |---------------------------------|--------------------------------------------------| | overlap_fraction_false_positive | The fraction that a computer - generated ROI must | | ( 0 . 01 ) | overlap a human - generated ROI mark to be a match | |---------------------------------|--------------------------------------------------|","title":"wiseetal_gt_falsepositive_matches"},{"location":"reference/at_pipelines/specific_studies/wiseetal_gt_truepositive_matches.m/","text":"wiseetal_gt_truepositive_matches \u00b6 WISEETAL_GT_TRUEPOSITIVE_MATCHES - calculate true positive matches [ INDEXES , GOOD_GT ] = WISEETAL_GT_TRUEPOSITIVE_MATCHES ( GT_STRUCT ) Given a ground - truth structure ( such as that output by AT_GROUNDTRUTHCORRESPONDENCE ) this function calculates the index of each computer - generated ROI that has the most overlap with each ground - truth ROIs . Ground - truth ROIs are filtered for those that are at least as bright as the highest first threshold . This function also takes name / value pairs that modify its behavior ( see ` help namevaluepair ` ) : ------------------------------------------------------------------------------------| | Parameter ( default ) | Description | |--------------------------------|--------------------------------------------------| | overlap_fraction_true_positive | The fraction that a ground - truth ROI mark must | | ( 0 . 3 ) | overlap a computer - generated ROI to be a match | |--------------------------------|--------------------------------------------------|","title":"wiseetal_gt_truepositive_matches"},{"location":"reference/at_pipelines/specific_studies/wiseetal_gt_truepositive_matches.m/#wiseetal_gt_truepositive_matches","text":"WISEETAL_GT_TRUEPOSITIVE_MATCHES - calculate true positive matches [ INDEXES , GOOD_GT ] = WISEETAL_GT_TRUEPOSITIVE_MATCHES ( GT_STRUCT ) Given a ground - truth structure ( such as that output by AT_GROUNDTRUTHCORRESPONDENCE ) this function calculates the index of each computer - generated ROI that has the most overlap with each ground - truth ROIs . Ground - truth ROIs are filtered for those that are at least as bright as the highest first threshold . This function also takes name / value pairs that modify its behavior ( see ` help namevaluepair ` ) : ------------------------------------------------------------------------------------| | Parameter ( default ) | Description | |--------------------------------|--------------------------------------------------| | overlap_fraction_true_positive | The fraction that a ground - truth ROI mark must | | ( 0 . 3 ) | overlap a computer - generated ROI to be a match | |--------------------------------|--------------------------------------------------|","title":"wiseetal_gt_truepositive_matches"},{"location":"reference/at_pipelines/specific_studies/wiseetal_loadgtanalysis.m/","text":"wiseetal_loadgtanalysis \u00b6 WISEETAL_LOADGTANALYSIS - load ground truth analysis S = WISEETAL_LOADGTANALYSIS ( DIRNAME ) DIRNAME is the directory name of an experiment","title":"wiseetal_loadgtanalysis"},{"location":"reference/at_pipelines/specific_studies/wiseetal_loadgtanalysis.m/#wiseetal_loadgtanalysis","text":"WISEETAL_LOADGTANALYSIS - load ground truth analysis S = WISEETAL_LOADGTANALYSIS ( DIRNAME ) DIRNAME is the directory name of an experiment","title":"wiseetal_loadgtanalysis"},{"location":"reference/at_pipelines/specific_studies/wiseetal_plotfinaltpfp.m/","text":"wiseetal_plotfinaltpfp \u00b6 wiseetal_plotfinaltpfp is a function. [mn_tp, mn_fp, ste_tp, ste_fp] = wiseetal_plotfinaltpfp(out)","title":"wiseetal_plotfinaltpfp"},{"location":"reference/at_pipelines/specific_studies/wiseetal_plotfinaltpfp.m/#wiseetal_plotfinaltpfp","text":"wiseetal_plotfinaltpfp is a function. [mn_tp, mn_fp, ste_tp, ste_fp] = wiseetal_plotfinaltpfp(out)","title":"wiseetal_plotfinaltpfp"},{"location":"reference/at_pipelines/specific_studies/wiseetal_plotgtanalysis.m/","text":"wiseetal_plotgtanalysis \u00b6 wiseetal_plotgtanalysis is a function. out = wiseetal_plotgtanalysis(s)","title":"wiseetal_plotgtanalysis"},{"location":"reference/at_pipelines/specific_studies/wiseetal_plotgtanalysis.m/#wiseetal_plotgtanalysis","text":"wiseetal_plotgtanalysis is a function. out = wiseetal_plotgtanalysis(s)","title":"wiseetal_plotgtanalysis"},{"location":"reference/at_pipelines/specific_studies/wiseetal_plotstatisticalbrightness.m/","text":"wiseetal_plotstatisticalbrightness \u00b6 wiseetal_plotstatisticalbrightness is a function . [ brightstats ] = wiseetal_plotstatisticalbrightness ( s )","title":"wiseetal_plotstatisticalbrightness"},{"location":"reference/at_pipelines/specific_studies/wiseetal_plotstatisticalbrightness.m/#wiseetal_plotstatisticalbrightness","text":"wiseetal_plotstatisticalbrightness is a function . [ brightstats ] = wiseetal_plotstatisticalbrightness ( s )","title":"wiseetal_plotstatisticalbrightness"},{"location":"reference/at_pipelines/specific_studies/wiseetal_plotstatisticalmore.m/","text":"wiseetal_plotstatisticalmore \u00b6 wiseetal_plotstatisticalmore is a function . [ stats ] = wiseetal_plotstatisticalmore ( s , analysiscode , vol_threshold , N_threshold )","title":"wiseetal_plotstatisticalmore"},{"location":"reference/at_pipelines/specific_studies/wiseetal_plotstatisticalmore.m/#wiseetal_plotstatisticalmore","text":"wiseetal_plotstatisticalmore is a function . [ stats ] = wiseetal_plotstatisticalmore ( s , analysiscode , vol_threshold , N_threshold )","title":"wiseetal_plotstatisticalmore"},{"location":"reference/at_pipelines/specific_studies/wiseetal_plotstatisticalmoreVG.m/","text":"wiseetal_plotstatisticalmoreVG \u00b6 wiseetal_plotstatisticalmoreVG is a function . [ stats ] = wiseetal_plotstatisticalmore ( s , analysiscode , vol_threshold , N_threshold )","title":"wiseetal_plotstatisticalmoreVG"},{"location":"reference/at_pipelines/specific_studies/wiseetal_plotstatisticalmoreVG.m/#wiseetal_plotstatisticalmorevg","text":"wiseetal_plotstatisticalmoreVG is a function . [ stats ] = wiseetal_plotstatisticalmore ( s , analysiscode , vol_threshold , N_threshold )","title":"wiseetal_plotstatisticalmoreVG"},{"location":"reference/at_pipelines/specific_studies/wiseetal_runnumber.m/","text":"wiseetal_runnumber \u00b6 WISEETAL_RUNNUMBER - run a pipeline algorithm for Wise et al WISEETAL_RUNNUMBER ( D , N , ... ) D is a cell array of directory names of experiments N is the algorithm number to use . For example , 109 The function takes name / value pairs that modify its behavior : ------------------------------------------------------------| | Parameter ( default ) | Description | |-------------------------|---------------------------------| | doit ( 0 ) | Should we run the pipelines ( 1 ) | | | or just print the commands we | | | would run ( 0 ) ? | | doROIfinding ( 0 ) | Should we discover ROIs ( 1 ) ? | | do_groundtruthanalysis ( 0 ) | Should we run ground truth | | | validation analysis ? | | spacer ( '_' ) | Are the images named 'PSD_DEC' | | | or PSDDEC ? spacer is the | | | character in between . Use '' | | | for none . | | channels ({ 'PSD' , 'VG' }) | Channels to run | |-------------------------|---------------------------------| Example : d = { '/Volumes/van-hooser-lab/Users/Derek/Synaptic Imaging/Cell fills/Full dataset/11-12-20 DLW/CTRL 1/analysis' } % or d = at_findalldirs('/Volumes/van-hooser-lab/Users/Derek/Synaptic Imaging/Cell fills/Full dataset') % use this to check it wiseetal_runnumber ( d , 109 , 'doit' , 0 , 'doROIfinding' , 1 , 'channels' ,{ 'PSD' , 'VG' , 'BAS' }, 'spacer' , '' ) % use this to run it! wiseetal_runnumber ( d , 109 , 'doit' , 0 , 'doROIfinding' , 1 , 'channels' ,{ 'PSD' , 'VG' , 'BAS' }, 'spacer' , '' )","title":"wiseetal_runnumber"},{"location":"reference/at_pipelines/specific_studies/wiseetal_runnumber.m/#wiseetal_runnumber","text":"WISEETAL_RUNNUMBER - run a pipeline algorithm for Wise et al WISEETAL_RUNNUMBER ( D , N , ... ) D is a cell array of directory names of experiments N is the algorithm number to use . For example , 109 The function takes name / value pairs that modify its behavior : ------------------------------------------------------------| | Parameter ( default ) | Description | |-------------------------|---------------------------------| | doit ( 0 ) | Should we run the pipelines ( 1 ) | | | or just print the commands we | | | would run ( 0 ) ? | | doROIfinding ( 0 ) | Should we discover ROIs ( 1 ) ? | | do_groundtruthanalysis ( 0 ) | Should we run ground truth | | | validation analysis ? | | spacer ( '_' ) | Are the images named 'PSD_DEC' | | | or PSDDEC ? spacer is the | | | character in between . Use '' | | | for none . | | channels ({ 'PSD' , 'VG' }) | Channels to run | |-------------------------|---------------------------------| Example : d = { '/Volumes/van-hooser-lab/Users/Derek/Synaptic Imaging/Cell fills/Full dataset/11-12-20 DLW/CTRL 1/analysis' } % or d = at_findalldirs('/Volumes/van-hooser-lab/Users/Derek/Synaptic Imaging/Cell fills/Full dataset') % use this to check it wiseetal_runnumber ( d , 109 , 'doit' , 0 , 'doROIfinding' , 1 , 'channels' ,{ 'PSD' , 'VG' , 'BAS' }, 'spacer' , '' ) % use this to run it! wiseetal_runnumber ( d , 109 , 'doit' , 0 , 'doROIfinding' , 1 , 'channels' ,{ 'PSD' , 'VG' , 'BAS' }, 'spacer' , '' )","title":"wiseetal_runnumber"},{"location":"reference/at_pipelines/specific_studies/wiseetal_summary.m/","text":"wiseetal_summary \u00b6 WISEETAL_SUMMARY - generate a summary structure of the experiments of Wise et al S = WISEETAL_SUMMARY(D) D is a directory list of all experiments.","title":"wiseetal_summary"},{"location":"reference/at_pipelines/specific_studies/wiseetal_summary.m/#wiseetal_summary","text":"WISEETAL_SUMMARY - generate a summary structure of the experiments of Wise et al S = WISEETAL_SUMMARY(D) D is a directory list of all experiments.","title":"wiseetal_summary"},{"location":"reference/at_pipelines/specific_studies/wiseetal_validation.m/","text":"wiseetal_validation \u00b6 wiseetal_validation is a script.","title":"wiseetal_validation"},{"location":"reference/at_pipelines/specific_studies/wiseetal_validation.m/#wiseetal_validation","text":"wiseetal_validation is a script.","title":"wiseetal_validation"},{"location":"reference/at_roi/at_roi_editors_list.m/","text":"at_roi_editors_list \u00b6 AT_ROI_EDITORS_LIST - List of available AT_ROI_EDITORS functions S = AT_ROI_EDITORS_LIST Returns in S a cell list of strings with the names of all available functions for making ROIs in array tomography images","title":"at_roi_editors_list"},{"location":"reference/at_roi/at_roi_editors_list.m/#at_roi_editors_list","text":"AT_ROI_EDITORS_LIST - List of available AT_ROI_EDITORS functions S = AT_ROI_EDITORS_LIST Returns in S a cell list of strings with the names of all available functions for making ROIs in array tomography images","title":"at_roi_editors_list"},{"location":"reference/at_roi/at_roi_makers_list.m/","text":"at_roi_makers_list \u00b6 AT_ROI_MAKERS_LIST - List of available AT_ROI_MAKERS functions S = AT_ROI_MAKERS_LIST Returns in S a cell list of strings with the names of all available functions for making ROIs in array tomography images","title":"at_roi_makers_list"},{"location":"reference/at_roi/at_roi_makers_list.m/#at_roi_makers_list","text":"AT_ROI_MAKERS_LIST - List of available AT_ROI_MAKERS functions S = AT_ROI_MAKERS_LIST Returns in S a cell list of strings with the names of all available functions for making ROIs in array tomography images","title":"at_roi_makers_list"},{"location":"reference/at_roi/at_roi_editors/at_roi_clusterfilter.m/","text":"at_roi_clusterfilter \u00b6 AT_ROI_VOLUMEFILTER - Filter ROIs by volume OUT = AT_ROI_VOLUMEFILTER ( ATD , INPUT_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters .","title":"at_roi_clusterfilter"},{"location":"reference/at_roi/at_roi_editors/at_roi_clusterfilter.m/#at_roi_clusterfilter","text":"AT_ROI_VOLUMEFILTER - Filter ROIs by volume OUT = AT_ROI_VOLUMEFILTER ( ATD , INPUT_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters .","title":"at_roi_clusterfilter"},{"location":"reference/at_roi/at_roi_editors/at_roi_combine.m/","text":"at_roi_combine \u00b6 AT_ROI_COMBINE - Filter ROIs by volume OUT = AT_ROI_COMBINE ( ATD , INPUT_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters . The PARAMETERS for this function can just be empty , there are no parameters . All ROIs are combined into a single ROI .","title":"at_roi_combine"},{"location":"reference/at_roi/at_roi_editors/at_roi_combine.m/#at_roi_combine","text":"AT_ROI_COMBINE - Filter ROIs by volume OUT = AT_ROI_COMBINE ( ATD , INPUT_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters . The PARAMETERS for this function can just be empty , there are no parameters . All ROIs are combined into a single ROI .","title":"at_roi_combine"},{"location":"reference/at_roi/at_roi_editors/at_roi_filtercolocalization.m/","text":"at_roi_filtercolocalization \u00b6 AT_ROI_FILTERCOLOCALIZATION - Filter ROIs by volume OUT = AT_ROI_FILTERCOLOCALIZATION ( ATD , INPUT_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters . The PARAMETERS for this function can just be empty , there are no parameters . All ROIs are resegmented using ROI_RESEGMENT_ALL .","title":"at_roi_filtercolocalization"},{"location":"reference/at_roi/at_roi_editors/at_roi_filtercolocalization.m/#at_roi_filtercolocalization","text":"AT_ROI_FILTERCOLOCALIZATION - Filter ROIs by volume OUT = AT_ROI_FILTERCOLOCALIZATION ( ATD , INPUT_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters . The PARAMETERS for this function can just be empty , there are no parameters . All ROIs are resegmented using ROI_RESEGMENT_ALL .","title":"at_roi_filtercolocalization"},{"location":"reference/at_roi/at_roi_editors/at_roi_maskfilter.m/","text":"at_roi_maskfilter \u00b6 AT_ROI_VOLUMEFILTER - Filter ROIs by volume OUT = AT_ROI_VOLUMEFILTER ( ATD , INPUT_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters .","title":"at_roi_maskfilter"},{"location":"reference/at_roi/at_roi_editors/at_roi_maskfilter.m/#at_roi_maskfilter","text":"AT_ROI_VOLUMEFILTER - Filter ROIs by volume OUT = AT_ROI_VOLUMEFILTER ( ATD , INPUT_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters .","title":"at_roi_maskfilter"},{"location":"reference/at_roi/at_roi_editors/at_roi_numabovethreshfilter.m/","text":"at_roi_numabovethreshfilter \u00b6 NUMBER OF PIXELS ABOVE HIGH THRESHOLD FILTER","title":"at_roi_numabovethreshfilter"},{"location":"reference/at_roi/at_roi_editors/at_roi_numabovethreshfilter.m/#at_roi_numabovethreshfilter","text":"NUMBER OF PIXELS ABOVE HIGH THRESHOLD FILTER","title":"at_roi_numabovethreshfilter"},{"location":"reference/at_roi/at_roi_editors/at_roi_prominencyfilter.m/","text":"at_roi_prominencyfilter \u00b6 PROMINENCY FILTER","title":"at_roi_prominencyfilter"},{"location":"reference/at_roi/at_roi_editors/at_roi_prominencyfilter.m/#at_roi_prominencyfilter","text":"PROMINENCY FILTER","title":"at_roi_prominencyfilter"},{"location":"reference/at_roi/at_roi_editors/at_roi_propertyfilter.m/","text":"at_roi_propertyfilter \u00b6 AT_ROI_PROPERTYFILTER - Filter ROIs by volume OUT = AT_ROI_PROPERTYFILTER ( ATD , INPUT_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters .","title":"at_roi_propertyfilter"},{"location":"reference/at_roi/at_roi_editors/at_roi_propertyfilter.m/#at_roi_propertyfilter","text":"AT_ROI_PROPERTYFILTER - Filter ROIs by volume OUT = AT_ROI_PROPERTYFILTER ( ATD , INPUT_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters .","title":"at_roi_propertyfilter"},{"location":"reference/at_roi/at_roi_editors/at_roi_resegment.m/","text":"at_roi_resegment \u00b6 AT_ROI_COMBINE - Filter ROIs by volume OUT = AT_ROI_COMBINE ( ATD , INPUT_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters . The PARAMETERS for this function can just be empty , there are no parameters . All ROIs are resegmented using ROI_RESEGMENT_ALL .","title":"at_roi_resegment"},{"location":"reference/at_roi/at_roi_editors/at_roi_resegment.m/#at_roi_resegment","text":"AT_ROI_COMBINE - Filter ROIs by volume OUT = AT_ROI_COMBINE ( ATD , INPUT_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters . The PARAMETERS for this function can just be empty , there are no parameters . All ROIs are resegmented using ROI_RESEGMENT_ALL .","title":"at_roi_resegment"},{"location":"reference/at_roi/at_roi_editors/at_roi_secondthresh.m/","text":"at_roi_secondthresh \u00b6 SECOND THRESHOLD","title":"at_roi_secondthresh"},{"location":"reference/at_roi/at_roi_editors/at_roi_secondthresh.m/#at_roi_secondthresh","text":"SECOND THRESHOLD","title":"at_roi_secondthresh"},{"location":"reference/at_roi/at_roi_editors/at_roi_secondthresh2.m/","text":"at_roi_secondthresh2 \u00b6 SECOND THRESHOLD","title":"at_roi_secondthresh2"},{"location":"reference/at_roi/at_roi_editors/at_roi_secondthresh2.m/#at_roi_secondthresh2","text":"SECOND THRESHOLD","title":"at_roi_secondthresh2"},{"location":"reference/at_roi/at_roi_editors/at_roi_squatfilter.m/","text":"at_roi_squatfilter \u00b6 PROMINENCY FILTER","title":"at_roi_squatfilter"},{"location":"reference/at_roi/at_roi_editors/at_roi_squatfilter.m/#at_roi_squatfilter","text":"PROMINENCY FILTER","title":"at_roi_squatfilter"},{"location":"reference/at_roi/at_roi_editors/at_roi_volumefilter.m/","text":"at_roi_volumefilter \u00b6 AT_ROI_VOLUMEFILTER - Filter ROIs by volume OUT = AT_ROI_VOLUMEFILTER ( ATD , INPUT_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters .","title":"at_roi_volumefilter"},{"location":"reference/at_roi/at_roi_editors/at_roi_volumefilter.m/#at_roi_volumefilter","text":"AT_ROI_VOLUMEFILTER - Filter ROIs by volume OUT = AT_ROI_VOLUMEFILTER ( ATD , INPUT_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters .","title":"at_roi_volumefilter"},{"location":"reference/at_roi/at_roi_editors/at_roi_xysizefilter.m/","text":"at_roi_xysizefilter \u00b6 AT_ROI_XYSIZEFILTER - Filter ROIs by size OUT = AT_ROI_XYSIZEFILTER ( ATD , INPUT_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters .","title":"at_roi_xysizefilter"},{"location":"reference/at_roi/at_roi_editors/at_roi_xysizefilter.m/#at_roi_xysizefilter","text":"AT_ROI_XYSIZEFILTER - Filter ROIs by size OUT = AT_ROI_XYSIZEFILTER ( ATD , INPUT_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters .","title":"at_roi_xysizefilter"},{"location":"reference/at_roi/at_roi_editors/at_roi_zspanfilter.m/","text":"at_roi_zspanfilter \u00b6 AT_ROI_ZSPANFILTER - Filter ROIs by Z span OUT = AT_ROI_ZSPANFILTER ( ATD , INPUT_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters .","title":"at_roi_zspanfilter"},{"location":"reference/at_roi/at_roi_editors/at_roi_zspanfilter.m/#at_roi_zspanfilter","text":"AT_ROI_ZSPANFILTER - Filter ROIs by Z span OUT = AT_ROI_ZSPANFILTER ( ATD , INPUT_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters .","title":"at_roi_zspanfilter"},{"location":"reference/at_roi/at_roi_functions/at_roi_locbacgr.m/","text":"at_roi_locbacgr \u00b6 Local Background","title":"at_roi_locbacgr"},{"location":"reference/at_roi/at_roi_functions/at_roi_locbacgr.m/#at_roi_locbacgr","text":"Local Background","title":"at_roi_locbacgr"},{"location":"reference/at_roi/at_roi_functions/at_roi_parameters.m/","text":"at_roi_parameters \u00b6 AT_ROI_SIZES - for an ROI filename , return the ROI sizes ROIPARAMETERS = AT_ROI_SIZES ( FILENAME ) Returns a Matlab structure of the ROI sizes In addition , writes the data to a file called FILENAME_roiparameters . mat . Uses the parallel toolbox to speed up the calculation and reports subcalculations .","title":"at_roi_parameters"},{"location":"reference/at_roi/at_roi_functions/at_roi_parameters.m/#at_roi_parameters","text":"AT_ROI_SIZES - for an ROI filename , return the ROI sizes ROIPARAMETERS = AT_ROI_SIZES ( FILENAME ) Returns a Matlab structure of the ROI sizes In addition , writes the data to a file called FILENAME_roiparameters . mat . Uses the parallel toolbox to speed up the calculation and reports subcalculations .","title":"at_roi_parameters"},{"location":"reference/at_roi/at_roi_functions/at_roi_parameters2struct.m/","text":"at_roi_parameters2struct \u00b6 AT_ROI_PARAMETERS2STRUCT - return a structure with 1 - D fields OUTSTRUCT = AT_ROI_PARAMETERS2STRUCT ( ROIPARAMS )","title":"at_roi_parameters2struct"},{"location":"reference/at_roi/at_roi_functions/at_roi_parameters2struct.m/#at_roi_parameters2struct","text":"AT_ROI_PARAMETERS2STRUCT - return a structure with 1 - D fields OUTSTRUCT = AT_ROI_PARAMETERS2STRUCT ( ROIPARAMS )","title":"at_roi_parameters2struct"},{"location":"reference/at_roi/at_roi_functions/at_roi_savesubset.m/","text":"at_roi_savesubset \u00b6 AT_ROI_SAVESUBSET - save an subset of ROI and its associated files AT_ROI_SAVESUBSET(ATD, INPUT_ITEMNAME, INDEXES, OUTPUT_ITEMNAME, HISTORY) Saves a new ROI set with OUTPUT_ITEMNAME, selecting a subset (INDEXES) of the ROIS in the ROI set at INPUT_ITEMNAME. HISTORY is saved with the new ROI set.","title":"at_roi_savesubset"},{"location":"reference/at_roi/at_roi_functions/at_roi_savesubset.m/#at_roi_savesubset","text":"AT_ROI_SAVESUBSET - save an subset of ROI and its associated files AT_ROI_SAVESUBSET(ATD, INPUT_ITEMNAME, INDEXES, OUTPUT_ITEMNAME, HISTORY) Saves a new ROI set with OUTPUT_ITEMNAME, selecting a subset (INDEXES) of the ROIS in the ROI set at INPUT_ITEMNAME. HISTORY is saved with the new ROI set.","title":"at_roi_savesubset"},{"location":"reference/at_roi/at_roi_functions/at_roi_secthreshslopes.m/","text":"at_roi_secthreshslopes \u00b6 Local Background","title":"at_roi_secthreshslopes"},{"location":"reference/at_roi/at_roi_functions/at_roi_secthreshslopes.m/#at_roi_secthreshslopes","text":"Local Background","title":"at_roi_secthreshslopes"},{"location":"reference/at_roi/at_roi_functions/at_roi_test2dregionprops.m/","text":"at_roi_test2dregionprops \u00b6 at_roi_test2dregionprops is a function . [ myprops2d_all , myprops2d_indiv ] = at_roi_test2dregionprops ( CC2 )","title":"at_roi_test2dregionprops"},{"location":"reference/at_roi/at_roi_functions/at_roi_test2dregionprops.m/#at_roi_test2dregionprops","text":"at_roi_test2dregionprops is a function . [ myprops2d_all , myprops2d_indiv ] = at_roi_test2dregionprops ( CC2 )","title":"at_roi_test2dregionprops"},{"location":"reference/at_roi/at_roi_functions/at_roi_underlying_image.m/","text":"at_roi_underlying_image \u00b6 AT_ROI_UNDERLYING_IMAGE - what is the underlying image of an ROI set ? [ IMAGE_NAME , IMAGEFILENAME ] = AT_ROI_UNDERLYING_IMAGE ( ATD , ROI_NAME ) Return the raw image item that underlies the ROIs with name ROI_NAME .","title":"at_roi_underlying_image"},{"location":"reference/at_roi/at_roi_functions/at_roi_underlying_image.m/#at_roi_underlying_image","text":"AT_ROI_UNDERLYING_IMAGE - what is the underlying image of an ROI set ? [ IMAGE_NAME , IMAGEFILENAME ] = AT_ROI_UNDERLYING_IMAGE ( ATD , ROI_NAME ) Return the raw image item that underlies the ROIs with name ROI_NAME .","title":"at_roi_underlying_image"},{"location":"reference/at_roi/at_roi_functions/at_roi_widthhalfheight.m/","text":"at_roi_widthhalfheight \u00b6 Local Background","title":"at_roi_widthhalfheight"},{"location":"reference/at_roi/at_roi_functions/at_roi_widthhalfheight.m/#at_roi_widthhalfheight","text":"Local Background","title":"at_roi_widthhalfheight"},{"location":"reference/at_roi/at_roi_makers/at_roi_connect.m/","text":"at_roi_connect \u00b6 AT_ROI_CONNECT - Use BWCONNCOMP to compute ROIs from thresholded image OUT = AT_ROI_CONNECT ( ATD , INPUT_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters .","title":"at_roi_connect"},{"location":"reference/at_roi/at_roi_makers/at_roi_connect.m/#at_roi_connect","text":"AT_ROI_CONNECT - Use BWCONNCOMP to compute ROIs from thresholded image OUT = AT_ROI_CONNECT ( ATD , INPUT_ITEMNAME , OUTPUT_ITEMNAME , PARAMETERS ) If the function is called with no arguments , then a description of the parameters is returned in OUT . OUT { 1 }{ n } is the name of the nth parameter , and OUT { 2 }{ n } is a human - readable description of the parameter . OUT { 3 } is a list of methods for user - guided selection of these parameters .","title":"at_roi_connect"},{"location":"reference/at_scaler/airyscaler3.m/","text":"airyscaler3 \u00b6 AIRYSCALER3 ( FNAME ) scales an image stack produced by AiryScan processing . AIRYSCALER finds an estimate of the signal from a frame of an image , then fits the change of this value over frames to an exponential decay fxn . The noise distribution of the image is centered around 0 , and then each value is multiplied by the inverse of the exponential decay , causing the signal of each frame to better resemble the first frame . fname should be the name of a single - channel . tif image ( the full name , incuding the file path ) generated from the Airyscan microscope . adj_scale is an option to hone your scaling if you feel the application did a poor job . It will add an additional scaling factor to that derived from the exponential decay over depth .","title":"airyscaler3"},{"location":"reference/at_scaler/airyscaler3.m/#airyscaler3","text":"AIRYSCALER3 ( FNAME ) scales an image stack produced by AiryScan processing . AIRYSCALER finds an estimate of the signal from a frame of an image , then fits the change of this value over frames to an exponential decay fxn . The noise distribution of the image is centered around 0 , and then each value is multiplied by the inverse of the exponential decay , causing the signal of each frame to better resemble the first frame . fname should be the name of a single - channel . tif image ( the full name , incuding the file path ) generated from the Airyscan microscope . adj_scale is an option to hone your scaling if you feel the application did a poor job . It will add an additional scaling factor to that derived from the exponential decay over depth .","title":"airyscaler3"},{"location":"reference/at_scaler/airyscaler4.m/","text":"airyscaler4 \u00b6 AIRYSCALER3 ( FNAME ) scales an image stack produced by AiryScan processing . AIRYSCALER finds an estimate of the signal from a frame of an image , then fits the change of this value over frames to an exponential decay fxn . The noise distribution of the image is centered around 0 , and then each value is multiplied by the inverse of the exponential decay , causing the signal of each frame to better resemble the first frame . fname should be the name of a single - channel . tif image ( the full name , incuding the file path ) generated from the Airyscan microscope . adj_scale is an option to hone your scaling if you feel the application did a poor job . It will add an additional scaling factor to that derived from the exponential decay over depth .","title":"airyscaler4"},{"location":"reference/at_scaler/airyscaler4.m/#airyscaler4","text":"AIRYSCALER3 ( FNAME ) scales an image stack produced by AiryScan processing . AIRYSCALER finds an estimate of the signal from a frame of an image , then fits the change of this value over frames to an exponential decay fxn . The noise distribution of the image is centered around 0 , and then each value is multiplied by the inverse of the exponential decay , causing the signal of each frame to better resemble the first frame . fname should be the name of a single - channel . tif image ( the full name , incuding the file path ) generated from the Airyscan microscope . adj_scale is an option to hone your scaling if you feel the application did a poor job . It will add an additional scaling factor to that derived from the exponential decay over depth .","title":"airyscaler4"},{"location":"reference/at_scaler/normalscaler3.m/","text":"normalscaler3 \u00b6 AIRYSCALER3 ( FNAME ) scales an image stack produced by AiryScan processing . AIRYSCALER finds an estimate of the signal from a frame of an image , then fits the change of this value over frames to an exponential decay fxn . The noise distribution of the image is centered around 0 , and then each value is multiplied by the inverse of the exponential decay , causing the signal of each frame to better resemble the first frame . fname should be the name of a single - channel . tif image ( the full name , incuding the file path ) generated from the Airyscan microscope . adj_scale is an option to hone your scaling if you feel the application did a poor job . It will add an additional scaling factor to that derived from the exponential decay over depth .","title":"normalscaler3"},{"location":"reference/at_scaler/normalscaler3.m/#normalscaler3","text":"AIRYSCALER3 ( FNAME ) scales an image stack produced by AiryScan processing . AIRYSCALER finds an estimate of the signal from a frame of an image , then fits the change of this value over frames to an exponential decay fxn . The noise distribution of the image is centered around 0 , and then each value is multiplied by the inverse of the exponential decay , causing the signal of each frame to better resemble the first frame . fname should be the name of a single - channel . tif image ( the full name , incuding the file path ) generated from the Airyscan microscope . adj_scale is an option to hone your scaling if you feel the application did a poor job . It will add an additional scaling factor to that derived from the exponential decay over depth .","title":"normalscaler3"},{"location":"reference/at_toydata/at_maketoydata.m/","text":"at_maketoydata \u00b6 AT_MAKETOYDATA - make toy data for testing array tomography analysis AT_MAKETOYDATA ( ... ) Makes a directory called 'at_toydata_example' in the present directory with an image with randomly generated dots . The \"dots\" are 3 - dimensional Gaussian spots . The default behavior can be modified by passing name / value pairs : Parameter ( default value ) | Description ------------------------------------------------------------------ parentdir ( pwd ) | The directory in which to create the 'at_toydata_example' directory dirname ( 'at_toydata_example' ) | The directory name imsize ([ 200 300 2 ]) | The size of the images to create for each channel | in [ X Y Z ] dotsize ([ 2 3 2 ]) | The size of each dot ([ x y z ]); these are parameters of | the 3 - d covariance matrix numdots ( 10 ) | The number of dots to create dotsame ( 0.5 ) | The fraction of dots that are the same across channels dotshift ([ 2 - 2 0 ]) | The shift of the dots across different channels dotpeak ( 255 ) | The peak value of the dot intensity","title":"at_maketoydata"},{"location":"reference/at_toydata/at_maketoydata.m/#at_maketoydata","text":"AT_MAKETOYDATA - make toy data for testing array tomography analysis AT_MAKETOYDATA ( ... ) Makes a directory called 'at_toydata_example' in the present directory with an image with randomly generated dots . The \"dots\" are 3 - dimensional Gaussian spots . The default behavior can be modified by passing name / value pairs : Parameter ( default value ) | Description ------------------------------------------------------------------ parentdir ( pwd ) | The directory in which to create the 'at_toydata_example' directory dirname ( 'at_toydata_example' ) | The directory name imsize ([ 200 300 2 ]) | The size of the images to create for each channel | in [ X Y Z ] dotsize ([ 2 3 2 ]) | The size of each dot ([ x y z ]); these are parameters of | the 3 - d covariance matrix numdots ( 10 ) | The number of dots to create dotsame ( 0.5 ) | The fraction of dots that are the same across channels dotshift ([ 2 - 2 0 ]) | The shift of the dots across different channels dotpeak ( 255 ) | The peak value of the dot intensity","title":"at_maketoydata"},{"location":"reference/at_utilities/at_colocalization_summary.m/","text":"at_colocalization_summary \u00b6 AT_COLOCALIZATION_SUMMARY - provide a summary of co - localizations [ OUT , MSG ] = AT_COLOCALIZATION_SUMMARY ( THE_ATDIR , COLOCALIZATION ) Returns a summary structure and string message describing the results of the triple colocalization analysis named COLOCALIZATION for the array tomography record THE_ATDIR . Example : the_atdir = atdir ( '/Users/vanhoosr/Downloads/2015-06-03' ); colname = 'SPINE_PSD_VGLUT_anyoverlap_2shift' ; % example roi name [ out , msg ] = at_colocalization_summary ( the_atdir , colname ); See also : ATDIR","title":"at_colocalization_summary"},{"location":"reference/at_utilities/at_colocalization_summary.m/#at_colocalization_summary","text":"AT_COLOCALIZATION_SUMMARY - provide a summary of co - localizations [ OUT , MSG ] = AT_COLOCALIZATION_SUMMARY ( THE_ATDIR , COLOCALIZATION ) Returns a summary structure and string message describing the results of the triple colocalization analysis named COLOCALIZATION for the array tomography record THE_ATDIR . Example : the_atdir = atdir ( '/Users/vanhoosr/Downloads/2015-06-03' ); colname = 'SPINE_PSD_VGLUT_anyoverlap_2shift' ; % example roi name [ out , msg ] = at_colocalization_summary ( the_atdir , colname ); See also : ATDIR","title":"at_colocalization_summary"},{"location":"reference/at_utilities/at_estimatethresholds.m/","text":"at_estimatethresholds \u00b6 AT_ESTIMATETHRESHOLDS - estimate thresholds for object detection [ T , OUT ] = AT_ESTIMATETHRESHOLDS ( IM , ... ) Estimate the thresholds for detecting objects in the array tomography ( or sparse confocal image ) IM . First , the signal is assumed to be present primarily in the top 75 th percentile of the data . The noise is modeled as a skewed gauss - like process after removing the top 75 th percentile of the data . ( See vlt . fit . skewgauss ) Outputs : t - Recommended thresholds to be 80 % and 30 % sure one is reading signal compared to noise out - A structure with fields : bin_centers - bin centers for automatic histogram used to examine data bin_edges - the edges used in the automatic histogram counts - count of data in each p_noise - parameters of the noise model for vlt . fit . skewgaussian noise_fit - fit of the noise distribution ( bin_centers as x values ) signal_y - [ 30 80 95 99 99.9 99.99 ] signal_x - conservative estimates of the values of IM that stand out beyond the noise signal at the 30 th , 80 th , 95 th 99 th , 99.9 th , 99.99 th percentile detection_quality - [ 0 : 95 ], detection quality reference threshold_signal_to_noise - same size as detection_quality ; the ith value indicates the value of IM that stands out beyond noise at the ith percentile ; estimated linearly based on conservative estimates for the range 30 - 80 detection_quality_better - [ 30 : 99 99.01 : 99.99 99.991 : 0.001 : 99.999 ] threshold_signal_to_noise_better - same size as detection_quality ; _better the ith value indicates the value of IM that stands out beyond noise at the ith percentile ; estimated based on conservative estimates for the range 30 - 99.9999","title":"at_estimatethresholds"},{"location":"reference/at_utilities/at_estimatethresholds.m/#at_estimatethresholds","text":"AT_ESTIMATETHRESHOLDS - estimate thresholds for object detection [ T , OUT ] = AT_ESTIMATETHRESHOLDS ( IM , ... ) Estimate the thresholds for detecting objects in the array tomography ( or sparse confocal image ) IM . First , the signal is assumed to be present primarily in the top 75 th percentile of the data . The noise is modeled as a skewed gauss - like process after removing the top 75 th percentile of the data . ( See vlt . fit . skewgauss ) Outputs : t - Recommended thresholds to be 80 % and 30 % sure one is reading signal compared to noise out - A structure with fields : bin_centers - bin centers for automatic histogram used to examine data bin_edges - the edges used in the automatic histogram counts - count of data in each p_noise - parameters of the noise model for vlt . fit . skewgaussian noise_fit - fit of the noise distribution ( bin_centers as x values ) signal_y - [ 30 80 95 99 99.9 99.99 ] signal_x - conservative estimates of the values of IM that stand out beyond the noise signal at the 30 th , 80 th , 95 th 99 th , 99.9 th , 99.99 th percentile detection_quality - [ 0 : 95 ], detection quality reference threshold_signal_to_noise - same size as detection_quality ; the ith value indicates the value of IM that stands out beyond noise at the ith percentile ; estimated linearly based on conservative estimates for the range 30 - 80 detection_quality_better - [ 30 : 99 99.01 : 99.99 99.991 : 0.001 : 99.999 ] threshold_signal_to_noise_better - same size as detection_quality ; _better the ith value indicates the value of IM that stands out beyond noise at the ith percentile ; estimated based on conservative estimates for the range 30 - 99.9999","title":"at_estimatethresholds"},{"location":"reference/at_utilities/at_findalldirs.m/","text":"at_findalldirs \u00b6 AT_FINDALLDIRS - find all array tomography directories from a starting path D = AT_FINDALLDIRS(STARTPATH, ...) Returns in D a cell array of full paths to AT directories; that is, those that have a subdirectory called 'images' that contains at least 1 subdirectory. Once we find a directory that has 'images' inside it, we don't look farther inside those directories.","title":"at_findalldirs"},{"location":"reference/at_utilities/at_findalldirs.m/#at_findalldirs","text":"AT_FINDALLDIRS - find all array tomography directories from a starting path D = AT_FINDALLDIRS(STARTPATH, ...) Returns in D a cell array of full paths to AT directories; that is, those that have a subdirectory called 'images' that contains at least 1 subdirectory. Once we find a directory that has 'images' inside it, we don't look farther inside those directories.","title":"at_findalldirs"},{"location":"reference/at_utilities/at_foreachdirdo.m/","text":"at_foreachdirdo \u00b6 AT_FOREACHDIRDO - for each at_directory in a list , call a script . AT_FOREACHDIRDO ( DIRLIST , SCRIPT2CALL ) This function will loop over DIRLIST , a cell array of directory paths to AT experiments . It will create a new object of type ATDIR called `atd` ( lowercase ). Then , it will call SCRIPT2CALL . Example : d = at_findalldirs ( '/Volumes/van-hooser-lab/Users/Derek/' ); at_foreachdirdo ( d , 'atd,' ) % simply prints the path","title":"at_foreachdirdo"},{"location":"reference/at_utilities/at_foreachdirdo.m/#at_foreachdirdo","text":"AT_FOREACHDIRDO - for each at_directory in a list , call a script . AT_FOREACHDIRDO ( DIRLIST , SCRIPT2CALL ) This function will loop over DIRLIST , a cell array of directory paths to AT experiments . It will create a new object of type ATDIR called `atd` ( lowercase ). Then , it will call SCRIPT2CALL . Example : d = at_findalldirs ( '/Volumes/van-hooser-lab/Users/Derek/' ); at_foreachdirdo ( d , 'atd,' ) % simply prints the path","title":"at_foreachdirdo"},{"location":"reference/at_utilities/at_groundtruthcorrespondence.m/","text":"at_groundtruthcorrespondence \u00b6 AT_GROUNDTRUTHCORRESPONDENCE STATS = AT_GROUNDTRUTHCORRESPONDENCE ( ATD , COMPUTER_ROIS , MASKREGION_ROIS , GROUNDTRUTH_ROIS , ...) Given an array tomography directory object ( ATDIR object ) ATD and the names of ROIs that were generated by the computer ( COMPUTER_ROIS ), a mask region ( such as a spine mask ) MASKREGION_ROIS , and the ROIs that correspond to some ground truth measurement ( GROUNDTRUTH_ROIS ), this function calculates overlap . It is assumed that the ground truth ROIs only exist within the mask and not in other regions . Returns several statistics in STATS , a structure: --------------------------------------------------------------------------| | Fieldname | Description | | -----------------------------------------------|------------------------| | N_overlaps_comp_onto_gt | Number of ROIs defined by the computer | | | that have some overlap with | | | the ground truth . This calculation is | | | performed for the subset of computer | | | ROIs that have at least a little | | | overlap with the mask . ( Checking for | | | true positives .) | | | Each column provides this | | | value for overlap ( comp onto gt ) | | | thresholds of 0.1 , 0.2 , ..., 0.9 . | | N_overlaps_gt_onto_comp | Number of ground truth ROIs that have | | | some overlap with the computer ROIs | | | that have some overlap with the mask . | | | Each column provides this | | | value for overlap ( gt onto comp ) | | | thresholds of 0.1 , 0.2 , ..., 0.9 . | | N_overlaps_comp_substantial ... | Number of ROIs defined by the computer | | onto_gt | that have some overlap with | | | the ground truth . This calculation is | | | performed for the subset of computer | | | ROIs that have a substantial | | | overlap with the mask . ( Checking for | | | false positives .) | | | Each column provides this | | | value for overlap ( comp onto gt ) | | | thresholds of 0.1 , 0.2 , ..., 0.9 . | | vol_gt | The volume of each ground truth ROI | | volorder_gt | The sort order of vol_gt | | vol_comp | The volume of computer ROIs that have | | | some minimal overlap with mask . | | volorder_comp | The sort order of vol_comp | | vol_comp_substantial | The volume of computer ROIs that have | | | substantial overlap with mask . | | volorder_comp_substantial | The sort order of vol_comp_substantial | | maxbright_gt | Maximum brightness of each GT ROI | | maxbright_comp | Max brightness of computer ROIs that | | | have some minimal overlap with mask | | maxbright_comp_substantial | Max brightness of computer ROIs that | | | have substantial overlap with mask | | thresholds | Thresholds used for comp ROIs | | thresholdinfo | Threshold estimation info | --------------------------------------------------------------------------- This function ' s behavior can be modified by passing name / value pairs: --------------------------------------------------------------------------| | Parameter ( default ) | Description | | -----------------------------------------------|------------------------| | overlap_threshold_mask ( 0 ) | How much should the | | | computer ROIs overlap | | | the mask region in | | | order to be counted ? | | | ( Fraction , strictly | | | greater than ) | | overlap_threshold_substantially_in_mask ( 0.5 ) | How much should the | | | computer ROIs overlap | | | the mask region to be | | | examined for false | | | positives ? | --------------------------------------------------------------------------- Example: stats = at_groundtruthcorrespondence ( atd , computer_rois , maskregion_rois , groundtruth_rois ); figure ; subplot ( 2 , 1 , 1 ); plot ( stats . vol_gt , stats . N_overlaps_gt_onto_comp ( stats . volorder_gt , 4 ), 'o' ); % threshold: 4 = 30 % xlabel (' Volume of ground truth ROIs '); ylabel (' Number of computer - identified ROIs that match the ground - truth ROIs '); title ([' How many ground truth ROIs have matches in the computer - identified ROIs ? ( 1 s are true positives .)']); subplot ( 2 , 1 , 2 ); plot ( stats . vol_comp_substantial , stats . N_overlaps_comp_substantial_onto_gt ( stats . volorder_comp_substantial , 2 ), 'o' ); % threshold: 2 = 10 % xlabel (' Volume of computer - identified ROIs that overlap the mask substantially '); ylabel (' Number of ground - truth ROIs that match the computer - identified ROIs '); title ([' How many computer - identified ROIs are valid ? ( 0 s are false positives .)']); disp ([' Estimated true positive rate: ' num2str ( stats . true_positives ( 4 ) / stats . gt_positives ) ]); disp ([' Upper bound estimate of false positive rate: ' num2str ( stats . false_positives ( 2 ) / stats . comp_positives ) ]);","title":"at_groundtruthcorrespondence"},{"location":"reference/at_utilities/at_groundtruthcorrespondence.m/#at_groundtruthcorrespondence","text":"AT_GROUNDTRUTHCORRESPONDENCE STATS = AT_GROUNDTRUTHCORRESPONDENCE ( ATD , COMPUTER_ROIS , MASKREGION_ROIS , GROUNDTRUTH_ROIS , ...) Given an array tomography directory object ( ATDIR object ) ATD and the names of ROIs that were generated by the computer ( COMPUTER_ROIS ), a mask region ( such as a spine mask ) MASKREGION_ROIS , and the ROIs that correspond to some ground truth measurement ( GROUNDTRUTH_ROIS ), this function calculates overlap . It is assumed that the ground truth ROIs only exist within the mask and not in other regions . Returns several statistics in STATS , a structure: --------------------------------------------------------------------------| | Fieldname | Description | | -----------------------------------------------|------------------------| | N_overlaps_comp_onto_gt | Number of ROIs defined by the computer | | | that have some overlap with | | | the ground truth . This calculation is | | | performed for the subset of computer | | | ROIs that have at least a little | | | overlap with the mask . ( Checking for | | | true positives .) | | | Each column provides this | | | value for overlap ( comp onto gt ) | | | thresholds of 0.1 , 0.2 , ..., 0.9 . | | N_overlaps_gt_onto_comp | Number of ground truth ROIs that have | | | some overlap with the computer ROIs | | | that have some overlap with the mask . | | | Each column provides this | | | value for overlap ( gt onto comp ) | | | thresholds of 0.1 , 0.2 , ..., 0.9 . | | N_overlaps_comp_substantial ... | Number of ROIs defined by the computer | | onto_gt | that have some overlap with | | | the ground truth . This calculation is | | | performed for the subset of computer | | | ROIs that have a substantial | | | overlap with the mask . ( Checking for | | | false positives .) | | | Each column provides this | | | value for overlap ( comp onto gt ) | | | thresholds of 0.1 , 0.2 , ..., 0.9 . | | vol_gt | The volume of each ground truth ROI | | volorder_gt | The sort order of vol_gt | | vol_comp | The volume of computer ROIs that have | | | some minimal overlap with mask . | | volorder_comp | The sort order of vol_comp | | vol_comp_substantial | The volume of computer ROIs that have | | | substantial overlap with mask . | | volorder_comp_substantial | The sort order of vol_comp_substantial | | maxbright_gt | Maximum brightness of each GT ROI | | maxbright_comp | Max brightness of computer ROIs that | | | have some minimal overlap with mask | | maxbright_comp_substantial | Max brightness of computer ROIs that | | | have substantial overlap with mask | | thresholds | Thresholds used for comp ROIs | | thresholdinfo | Threshold estimation info | --------------------------------------------------------------------------- This function ' s behavior can be modified by passing name / value pairs: --------------------------------------------------------------------------| | Parameter ( default ) | Description | | -----------------------------------------------|------------------------| | overlap_threshold_mask ( 0 ) | How much should the | | | computer ROIs overlap | | | the mask region in | | | order to be counted ? | | | ( Fraction , strictly | | | greater than ) | | overlap_threshold_substantially_in_mask ( 0.5 ) | How much should the | | | computer ROIs overlap | | | the mask region to be | | | examined for false | | | positives ? | --------------------------------------------------------------------------- Example: stats = at_groundtruthcorrespondence ( atd , computer_rois , maskregion_rois , groundtruth_rois ); figure ; subplot ( 2 , 1 , 1 ); plot ( stats . vol_gt , stats . N_overlaps_gt_onto_comp ( stats . volorder_gt , 4 ), 'o' ); % threshold: 4 = 30 % xlabel (' Volume of ground truth ROIs '); ylabel (' Number of computer - identified ROIs that match the ground - truth ROIs '); title ([' How many ground truth ROIs have matches in the computer - identified ROIs ? ( 1 s are true positives .)']); subplot ( 2 , 1 , 2 ); plot ( stats . vol_comp_substantial , stats . N_overlaps_comp_substantial_onto_gt ( stats . volorder_comp_substantial , 2 ), 'o' ); % threshold: 2 = 10 % xlabel (' Volume of computer - identified ROIs that overlap the mask substantially '); ylabel (' Number of ground - truth ROIs that match the computer - identified ROIs '); title ([' How many computer - identified ROIs are valid ? ( 0 s are false positives .)']); disp ([' Estimated true positive rate: ' num2str ( stats . true_positives ( 4 ) / stats . gt_positives ) ]); disp ([' Upper bound estimate of false positive rate: ' num2str ( stats . false_positives ( 2 ) / stats . comp_positives ) ]);","title":"at_groundtruthcorrespondence"},{"location":"reference/at_utilities/at_puncta_info.m/","text":"at_puncta_info \u00b6 FIND THE INTENSITY VALUES FOR EACH ROI","title":"at_puncta_info"},{"location":"reference/at_utilities/at_puncta_info.m/#at_puncta_info","text":"FIND THE INTENSITY VALUES FOR EACH ROI","title":"at_puncta_info"},{"location":"reference/at_utilities/at_readimage.m/","text":"at_readimage \u00b6 AT_READIMAGE - read an AT image in its entirety IM = AT_READIMAGE ( ATD , IMAGENAME ) Reads the image from the ATDIR ATD that has IMAGENAME . An error is generated if there is no such image .","title":"at_readimage"},{"location":"reference/at_utilities/at_readimage.m/#at_readimage","text":"AT_READIMAGE - read an AT image in its entirety IM = AT_READIMAGE ( ATD , IMAGENAME ) Reads the image from the ATDIR ATD that has IMAGENAME . An error is generated if there is no such image .","title":"at_readimage"},{"location":"reference/at_utilities/at_retrodoublethresholdfix.m/","text":"at_retrodoublethresholdfix \u00b6 AT_RETRODOUBLETHRESHOLDFIX - update thresholded images obtained with at_double_threshold so they have more parameter information AT_RETRODOUBLETHRESHOLDFIX(ATD)","title":"at_retrodoublethresholdfix"},{"location":"reference/at_utilities/at_retrodoublethresholdfix.m/#at_retrodoublethresholdfix","text":"AT_RETRODOUBLETHRESHOLDFIX - update thresholded images obtained with at_double_threshold so they have more parameter information AT_RETRODOUBLETHRESHOLDFIX(ATD)","title":"at_retrodoublethresholdfix"},{"location":"reference/at_utilities/at_roiimagemask.m/","text":"at_roiimagemask \u00b6 AT_ROIIMAGEMASK - remove everything from an image except regions inside ROIs AT_ROIIMAGEMASK ( ORIGINAL_FILENAME , ROIMASK_FILENAME , NEW_FILENAME ) Inputs: ORIGINAL_FILENAME - A filename of a TIF image with multiple Z planes but one image channel ROIMASK_FILENAME - A filename of an RGB TIF image with multiple Z planes , where one channel ( R , G , or B ) contains the pixels to be allowed through the original image NEW_FILENAME - The file name of a new file that will be created . It will be a single image channel image with all 0 s except for the locations that are indicated in the roi mask image This function also takes name / value pairs that modify its behavior: Parameter ( default ) | Description -------------------------------------------------------------------------------------------- mask_channel ( 1 ) | Which channel of ROIMASK_FILENAME has the the mask information ? | ( typically red is 1 , green is 2 , blue is 3 ) all_others_must_be_zero ( 1 ) | Use this option if the other channels must be 0 while the mask_channel | is 1. channels ([ 1 2 3 ]) | The channels available here . Examples: at_roiimagemask (' myoriginalfile . tif ',' mymaskfile . tif ',' mymaskedfile . tif ') at_roiimagemask (' myoriginalfile . tif ',' mymaskfile . tif ',' mymaskedfile . tif ',' mask_channel ', 2 )","title":"at_roiimagemask"},{"location":"reference/at_utilities/at_roiimagemask.m/#at_roiimagemask","text":"AT_ROIIMAGEMASK - remove everything from an image except regions inside ROIs AT_ROIIMAGEMASK ( ORIGINAL_FILENAME , ROIMASK_FILENAME , NEW_FILENAME ) Inputs: ORIGINAL_FILENAME - A filename of a TIF image with multiple Z planes but one image channel ROIMASK_FILENAME - A filename of an RGB TIF image with multiple Z planes , where one channel ( R , G , or B ) contains the pixels to be allowed through the original image NEW_FILENAME - The file name of a new file that will be created . It will be a single image channel image with all 0 s except for the locations that are indicated in the roi mask image This function also takes name / value pairs that modify its behavior: Parameter ( default ) | Description -------------------------------------------------------------------------------------------- mask_channel ( 1 ) | Which channel of ROIMASK_FILENAME has the the mask information ? | ( typically red is 1 , green is 2 , blue is 3 ) all_others_must_be_zero ( 1 ) | Use this option if the other channels must be 0 while the mask_channel | is 1. channels ([ 1 2 3 ]) | The channels available here . Examples: at_roiimagemask (' myoriginalfile . tif ',' mymaskfile . tif ',' mymaskedfile . tif ') at_roiimagemask (' myoriginalfile . tif ',' mymaskfile . tif ',' mymaskedfile . tif ',' mask_channel ', 2 )","title":"at_roiimagemask"},{"location":"reference/at_utilities/at_roisperzframe.m/","text":"at_roisperzframe \u00b6 AT_ROISPERZFRAME - calculate the number of ROIs that intersect each Z frame of the stack ROIS_PER_ZFRAME = AT_ROISPERZFRAME ( THE_ATDIR , ROINAME ) Given an array tomography directory object ( see \"help atdir\" ) and an ROI dataset name in ROINAME , this function calculates the number of 3 D ROIs that intersect each Z plane in 2 D . Example : the_atdir = atdir ( '/Users/vanhoosr/Downloads/2015-06-03' ); roiname = 'PSD_newscale_th_roi_vf_res' ; % example roi name rois_per_zframe = at_roisperzframe ( the_atdir , roiname ); See also : ATDIR","title":"at_roisperzframe"},{"location":"reference/at_utilities/at_roisperzframe.m/#at_roisperzframe","text":"AT_ROISPERZFRAME - calculate the number of ROIs that intersect each Z frame of the stack ROIS_PER_ZFRAME = AT_ROISPERZFRAME ( THE_ATDIR , ROINAME ) Given an array tomography directory object ( see \"help atdir\" ) and an ROI dataset name in ROINAME , this function calculates the number of 3 D ROIs that intersect each Z plane in 2 D . Example : the_atdir = atdir ( '/Users/vanhoosr/Downloads/2015-06-03' ); roiname = 'PSD_newscale_th_roi_vf_res' ; % example roi name rois_per_zframe = at_roisperzframe ( the_atdir , roiname ); See also : ATDIR","title":"at_roisperzframe"},{"location":"reference/at_utilities/automate/automateCOLOCreciprocal.m/","text":"automateCOLOCreciprocal \u00b6 AUTOMATE COLOC CREATION","title":"automateCOLOCreciprocal"},{"location":"reference/at_utilities/automate/automateCOLOCreciprocal.m/#automatecolocreciprocal","text":"AUTOMATE COLOC CREATION","title":"automateCOLOCreciprocal"},{"location":"reference/at_utilities/automate/automateCOLOCreciprocaldec.m/","text":"automateCOLOCreciprocaldec \u00b6 AUTOMATE COLOC CREATION","title":"automateCOLOCreciprocaldec"},{"location":"reference/at_utilities/automate/automateCOLOCreciprocaldec.m/#automatecolocreciprocaldec","text":"AUTOMATE COLOC CREATION","title":"automateCOLOCreciprocaldec"},{"location":"reference/at_utilities/automate/automateROIcreation.m/","text":"automateROIcreation \u00b6 AUTOMATE ROI CREATION","title":"automateROIcreation"},{"location":"reference/at_utilities/automate/automateROIcreation.m/#automateroicreation","text":"AUTOMATE ROI CREATION","title":"automateROIcreation"},{"location":"reference/at_utilities/automate/automateROIcreationdec.m/","text":"automateROIcreationdec \u00b6 AUTOMATE ROI CREATION","title":"automateROIcreationdec"},{"location":"reference/at_utilities/automate/automateROIcreationdec.m/#automateroicreationdec","text":"AUTOMATE ROI CREATION","title":"automateROIcreationdec"},{"location":"reference/at_utilities/automate/automatedeconscaling.m/","text":"automatedeconscaling \u00b6 Input e.g. fname = 'D:\\Analysis Data\\Synaptic Imaging\\Analysis 6, irreversibility\\inhbitory\\11-17-20'","title":"automatedeconscaling"},{"location":"reference/at_utilities/automate/automatedeconscaling.m/#automatedeconscaling","text":"Input e.g. fname = 'D:\\Analysis Data\\Synaptic Imaging\\Analysis 6, irreversibility\\inhbitory\\11-17-20'","title":"automatedeconscaling"},{"location":"reference/at_utilities/automate/automatefolder.m/","text":"automatefolder \u00b6 automatefolder is a script.","title":"automatefolder"},{"location":"reference/at_utilities/automate/automatefolder.m/#automatefolder","text":"automatefolder is a script.","title":"automatefolder"},{"location":"reference/at_utilities/automate/automatescaling.m/","text":"automatescaling \u00b6 Input e.g. fname = 'D:\\Analysis Data\\Synaptic Imaging\\Analysis 6, irreversibility\\inhbitory\\11-17-20'","title":"automatescaling"},{"location":"reference/at_utilities/automate/automatescaling.m/#automatescaling","text":"Input e.g. fname = 'D:\\Analysis Data\\Synaptic Imaging\\Analysis 6, irreversibility\\inhbitory\\11-17-20'","title":"automatescaling"},{"location":"reference/at_utilities/automate/automatevolumes.m/","text":"automatevolumes \u00b6 Automate Output Volume for \" Double Volume Measures \" analysis","title":"automatevolumes"},{"location":"reference/at_utilities/automate/automatevolumes.m/#automatevolumes","text":"Automate Output Volume for \" Double Volume Measures \" analysis","title":"automatevolumes"},{"location":"reference/at_utilities/automate/makefinalroi.m/","text":"makefinalroi \u00b6 Goes through the steps for my ROI analysis as of early October 2020 . Requires input as a file name with the suffix _th ( case sensitive ) .","title":"makefinalroi"},{"location":"reference/at_utilities/automate/makefinalroi.m/#makefinalroi","text":"Goes through the steps for my ROI analysis as of early October 2020 . Requires input as a file name with the suffix _th ( case sensitive ) .","title":"makefinalroi"},{"location":"reference/at_utilities/automate/reportvolumes.m/","text":"reportvolumes \u00b6 COMPARES PSD ROIs TO VG ROIs","title":"reportvolumes"},{"location":"reference/at_utilities/automate/reportvolumes.m/#reportvolumes","text":"COMPARES PSD ROIs TO VG ROIs","title":"reportvolumes"},{"location":"reference/at_utilities/automate/rundeconv.m/","text":"rundeconv \u00b6 rundeconv is a script.","title":"rundeconv"},{"location":"reference/at_utilities/automate/rundeconv.m/#rundeconv","text":"rundeconv is a script.","title":"rundeconv"},{"location":"reference/testcode/ROI_testcenterofmasscolocalization.m/","text":"ROI_testcenterofmasscolocalization \u00b6 ROI_testcenterofmasscolocalization is a function. diffhere = ROI_testcenterofmasscolocalization(colocalization_data)","title":"ROI_testcenterofmasscolocalization"},{"location":"reference/testcode/ROI_testcenterofmasscolocalization.m/#roi_testcenterofmasscolocalization","text":"ROI_testcenterofmasscolocalization is a function. diffhere = ROI_testcenterofmasscolocalization(colocalization_data)","title":"ROI_testcenterofmasscolocalization"},{"location":"reference/z_old_archived_code/all_overlaps.m/","text":"all_overlaps \u00b6 Inputs : ROIS3D1 , ROIS3D2 are ROI structures that are returned from SPOTDETECTOR3 . It has the following fields : . name The name of the roi ( same as ROINAME ) . index The index number . xi The xi coordinates of the contour . yi The yi coordinates of the contour . pixelinds Pixel index values ( in image BW ) of the ROI . labels Any labels for this ROI . stats All stats from matlab 's regionprops func L - the labeled 3 D BW image ; the numbers correspond to the ROIs ( 0 means no ROI was found at that location ) n No . of pixels by which ROI3D1 will be flared out XRANGE , YRANGE , ZRANGE : we will calculate the overlap over shifts of the ROIs in X , Y , and Z . e . g . , XRANGE = [ - 5 : 1 : 5 ] YRANGE = [ - 5 : 1 : 5 ], ZRANGE = [ - 5 : 1 5 ] computes the overlap for all shifts in X , Y , and Z of 5 pixels ( in all directions ) . Outputs : ROIS3DOVERLAP12 is the fraction of flared ROIS3D1 that overlaps ROIS3D2 when flared ROIS3D1 is shifted by x , y , z pixels ROIS3DOVERLAP21 is the fraction of ROIS3D2 that overlaps flared ROIS3D1 when flared ROIS3D2 is shifted by x , y , z pixels So , if you have saved L1 and L2 , which are full - sized images that have at each point the index number of the ROI , then you can quickly evaluate ROIS3d2_that_could_overlap_with_i = unique ( L2 ( rois3d1 ( i ) . indexes )); And then you can compute the overlap with all of those overlaps between rois3d1 ( i ) and rois3d2 ( j ) ( where j is in ROIS3d2_that_could_overlap_with_i , All other overlaps would be set to 0. We 'll need to modify this approach, because you' ll want to \"flare out\" the pixels of rois3d1 ( i ) . indexes by a few units ( over the spatial range over which you are calculating the overlap ) . Even if 2 objects don 't touch each other, they might overlap in the range of shifts that are applied .","title":"all_overlaps"},{"location":"reference/z_old_archived_code/all_overlaps.m/#all_overlaps","text":"Inputs : ROIS3D1 , ROIS3D2 are ROI structures that are returned from SPOTDETECTOR3 . It has the following fields : . name The name of the roi ( same as ROINAME ) . index The index number . xi The xi coordinates of the contour . yi The yi coordinates of the contour . pixelinds Pixel index values ( in image BW ) of the ROI . labels Any labels for this ROI . stats All stats from matlab 's regionprops func L - the labeled 3 D BW image ; the numbers correspond to the ROIs ( 0 means no ROI was found at that location ) n No . of pixels by which ROI3D1 will be flared out XRANGE , YRANGE , ZRANGE : we will calculate the overlap over shifts of the ROIs in X , Y , and Z . e . g . , XRANGE = [ - 5 : 1 : 5 ] YRANGE = [ - 5 : 1 : 5 ], ZRANGE = [ - 5 : 1 5 ] computes the overlap for all shifts in X , Y , and Z of 5 pixels ( in all directions ) . Outputs : ROIS3DOVERLAP12 is the fraction of flared ROIS3D1 that overlaps ROIS3D2 when flared ROIS3D1 is shifted by x , y , z pixels ROIS3DOVERLAP21 is the fraction of ROIS3D2 that overlaps flared ROIS3D1 when flared ROIS3D2 is shifted by x , y , z pixels So , if you have saved L1 and L2 , which are full - sized images that have at each point the index number of the ROI , then you can quickly evaluate ROIS3d2_that_could_overlap_with_i = unique ( L2 ( rois3d1 ( i ) . indexes )); And then you can compute the overlap with all of those overlaps between rois3d1 ( i ) and rois3d2 ( j ) ( where j is in ROIS3d2_that_could_overlap_with_i , All other overlaps would be set to 0. We 'll need to modify this approach, because you' ll want to \"flare out\" the pixels of rois3d1 ( i ) . indexes by a few units ( over the spatial range over which you are calculating the overlap ) . Even if 2 objects don 't touch each other, they might overlap in the range of shifts that are applied .","title":"all_overlaps"},{"location":"reference/z_old_archived_code/channeloverlap.m/","text":"channeloverlap \u00b6 channeloverlap is a function. [overlap12, overlap21] = channeloverlap(file1, file2, n, xrange, yrange, zrange)","title":"channeloverlap"},{"location":"reference/z_old_archived_code/channeloverlap.m/#channeloverlap","text":"channeloverlap is a function. [overlap12, overlap21] = channeloverlap(file1, file2, n, xrange, yrange, zrange)","title":"channeloverlap"},{"location":"reference/z_old_archived_code/checkrois_L.m/","text":"checkrois_L \u00b6 Checks rois3d against L to determine whether it is correctly labeled.","title":"checkrois_L"},{"location":"reference/z_old_archived_code/checkrois_L.m/#checkrois_l","text":"Checks rois3d against L to determine whether it is correctly labeled.","title":"checkrois_L"},{"location":"reference/z_old_archived_code/find_colocalization.m/","text":"find_colocalization \u00b6 Inputs : rois3doverlap is the fraction of a flared ROI that overlaps another ROI thresh is the threshold value for overlaps Output : roiscolocalization is 1 when overlap greater than or equal to thresh and is 0 otherwise","title":"find_colocalization"},{"location":"reference/z_old_archived_code/find_colocalization.m/#find_colocalization","text":"Inputs : rois3doverlap is the fraction of a flared ROI that overlaps another ROI thresh is the threshold value for overlaps Output : roiscolocalization is 1 when overlap greater than or equal to thresh and is 0 otherwise","title":"find_colocalization"},{"location":"reference/z_old_archived_code/identifyroi_L_errors.m/","text":"identifyroi_L_errors \u00b6 debugging function to identify ROIs with errors","title":"identifyroi_L_errors"},{"location":"reference/z_old_archived_code/identifyroi_L_errors.m/#identifyroi_l_errors","text":"debugging function to identify ROIs with errors","title":"identifyroi_L_errors"},{"location":"reference/z_old_archived_code/label_rois.m/","text":"label_rois \u00b6 LABEL_ROIS - Add a label to the ROIS ROIS = LABEL_ROIS(ROIS, LABEL1, ... LABELN) Inputs: ROIS - an ROI structure as from SPOTDETECTOR LABEL1 - A label to add to the 'label' field LABELN - A label to add to the 'label' field OUTPUS: ROIS - The modified ROI structure","title":"label_rois"},{"location":"reference/z_old_archived_code/label_rois.m/#label_rois","text":"LABEL_ROIS - Add a label to the ROIS ROIS = LABEL_ROIS(ROIS, LABEL1, ... LABELN) Inputs: ROIS - an ROI structure as from SPOTDETECTOR LABEL1 - A label to add to the 'label' field LABELN - A label to add to the 'label' field OUTPUS: ROIS - The modified ROI structure","title":"label_rois"},{"location":"reference/z_old_archived_code/plot_roi_sizes.m/","text":"plot_roi_sizes \u00b6 PLOT_ROI_SIZES - Plot the distribution of ROI sizes [ N , BINS , SIZES ] = PLOT_ROI_SIZES ( IMROIS , NUMBINS ) Return the roi sizes as a frequency histogram . Inputs : IMROIS are the image ROIs that are returned from SPOTDETECTOR3 . NUMBINS is the number of bins to use . Outputs : N is the number of rois in each bin , BINS are the size bins that can be plotted with BAR . SIZES are the size of each ROI ( will be the same length as IMROIS ) . See also : SPOTDETECTOR3 , HISTC","title":"plot_roi_sizes"},{"location":"reference/z_old_archived_code/plot_roi_sizes.m/#plot_roi_sizes","text":"PLOT_ROI_SIZES - Plot the distribution of ROI sizes [ N , BINS , SIZES ] = PLOT_ROI_SIZES ( IMROIS , NUMBINS ) Return the roi sizes as a frequency histogram . Inputs : IMROIS are the image ROIs that are returned from SPOTDETECTOR3 . NUMBINS is the number of bins to use . Outputs : N is the number of rois in each bin , BINS are the size bins that can be plotted with BAR . SIZES are the size of each ROI ( will be the same length as IMROIS ) . See also : SPOTDETECTOR3 , HISTC","title":"plot_roi_sizes"},{"location":"reference/z_old_archived_code/plot_rois.m/","text":"plot_rois \u00b6 PLOT_ROIS - Plot regions of interest [ H_LINES , H_TEXT ] = PLOT_ROIS ( ROIS , TEXTSIZE , COLOR ) Inputs: ROIS - A structure array of ROIS returned by SPOTDETECTOR TEXTSIZE - The size font that should be used to label the numbers ( 0 for none ) COLOR - The color that should be used , in [ R G B ] format ( 0. . .1 ) Outputs: H_LINES - Handle array of line plots H_TEXT - Handle array of text plots","title":"plot_rois"},{"location":"reference/z_old_archived_code/plot_rois.m/#plot_rois","text":"PLOT_ROIS - Plot regions of interest [ H_LINES , H_TEXT ] = PLOT_ROIS ( ROIS , TEXTSIZE , COLOR ) Inputs: ROIS - A structure array of ROIS returned by SPOTDETECTOR TEXTSIZE - The size font that should be used to label the numbers ( 0 for none ) COLOR - The color that should be used , in [ R G B ] format ( 0. . .1 ) Outputs: H_LINES - Handle array of line plots H_TEXT - Handle array of text plots","title":"plot_rois"},{"location":"reference/z_old_archived_code/roi3d2dprojection.m/","text":"roi3d2dprojection \u00b6 ROI3D2DPROJECTION - Project a 3 D ROI onto a 2 D projection [ INDEXES2D , PERIMETER2D ] = ROI3D2DPROJECTION ( INDEXES3D , ... IMAGESIZE , ZDIM ) Identifies the 2 D projection of a 3 - dimensional ROI with index values in 3 D space called INDEXES3D . The INDEXES3D describe the values within a 3 D image of size IMAGESIZE = [ NX NY NZ ] . The projection is made onto the Z dimension ZDIM , which can vary from 1 to NZ . PERIMETER2D is a list of perimeter values around all pieces of the 3 d ROI in the 2 d representation . It is a a cell list because the object can exist in multiple distinct pieces within the 2 d view .","title":"roi3d2dprojection"},{"location":"reference/z_old_archived_code/roi3d2dprojection.m/#roi3d2dprojection","text":"ROI3D2DPROJECTION - Project a 3 D ROI onto a 2 D projection [ INDEXES2D , PERIMETER2D ] = ROI3D2DPROJECTION ( INDEXES3D , ... IMAGESIZE , ZDIM ) Identifies the 2 D projection of a 3 - dimensional ROI with index values in 3 D space called INDEXES3D . The INDEXES3D describe the values within a 3 D image of size IMAGESIZE = [ NX NY NZ ] . The projection is made onto the Z dimension ZDIM , which can vary from 1 to NZ . PERIMETER2D is a list of perimeter values around all pieces of the 3 d ROI in the 2 d representation . It is a a cell list because the object can exist in multiple distinct pieces within the 2 d view .","title":"roi3d2dprojection"},{"location":"reference/z_old_archived_code/roi_overlap.m/","text":"roi_overlap \u00b6 ROI_OVERLAP - examines overlap between ROIs and binary image [ OVERLAPS ] = ROI_OVERLAP ( ROIS , BI ) Inputs : ROIS - An ROI structure list as returned from SPOTDETECTOR BI - A binary image to examine Outputs : ROI_OVERLAP - The fraction of overlapping pixels","title":"roi_overlap"},{"location":"reference/z_old_archived_code/roi_overlap.m/#roi_overlap","text":"ROI_OVERLAP - examines overlap between ROIs and binary image [ OVERLAPS ] = ROI_OVERLAP ( ROIS , BI ) Inputs : ROIS - An ROI structure list as returned from SPOTDETECTOR BI - A binary image to examine Outputs : ROI_OVERLAP - The fraction of overlapping pixels","title":"roi_overlap"},{"location":"reference/z_old_archived_code/roi_properties.m/","text":"roi_properties \u00b6 roi_properties is a function. properties = roi_properties(rois3d, D)","title":"roi_properties"},{"location":"reference/z_old_archived_code/roi_properties.m/#roi_properties","text":"roi_properties is a function. properties = roi_properties(rois3d, D)","title":"roi_properties"},{"location":"reference/z_old_archived_code/rois3d_overlap.m/","text":"rois3d_overlap \u00b6 ROIS3D_OVERLAP - Computes overlap between 3 D ROIS in 3 D space for different shifts [ OVERLAPA , OVERLAPB ] = RPO3D_OVERLAP ( ROIS3D1 , ROIS3D2 , XRANGE , YRANGE , ... ZRANGE , IMSIZE ) Inputs : ROIS3D1 , ROIS3D2 are ROI structures that are returned from SPOTDETECTOR3 . It has the following fields : . name The name of the roi ( same as ROINAME ) . index The index number . xi The xi coordinates of the contour . yi The yi coordinates of the contour . pixelinds Pixel index values ( in image BW ) of the ROI . labels Any labels for this ROI . stats All stats from matlab 's regionprops func XRANGE , YRANGE , ZRANGE : we will calculate the overlap over shifts of the ROIs in X , Y , and Z . e . g . , XRANGE = [ - 5 : 1 : 5 ] YRANGE = [ - 5 : 1 : 5 ], ZRANGE = [ - 5 : 1 5 ] computes the overlap for all shifts in X , Y , and Z of 5 pixels ( in all directions ) . IMSIZE - The image size in pixels [ NX NY NZ ] Outputs : OVERLAPA ( x , y , z ) is the fraction of roi3d1 that overlaps roi3d2 when roi3d1 is shifted by x , y , z pixels OVERLAPB ( x , y , z ) is the fraction of roi3d2 that overlaps roi3d1 when roi3d1 is shifted by x , y , z pixels See also : SPOTDETECTOR3 , ALL_OVERLAPS","title":"rois3d_overlap"},{"location":"reference/z_old_archived_code/rois3d_overlap.m/#rois3d_overlap","text":"ROIS3D_OVERLAP - Computes overlap between 3 D ROIS in 3 D space for different shifts [ OVERLAPA , OVERLAPB ] = RPO3D_OVERLAP ( ROIS3D1 , ROIS3D2 , XRANGE , YRANGE , ... ZRANGE , IMSIZE ) Inputs : ROIS3D1 , ROIS3D2 are ROI structures that are returned from SPOTDETECTOR3 . It has the following fields : . name The name of the roi ( same as ROINAME ) . index The index number . xi The xi coordinates of the contour . yi The yi coordinates of the contour . pixelinds Pixel index values ( in image BW ) of the ROI . labels Any labels for this ROI . stats All stats from matlab 's regionprops func XRANGE , YRANGE , ZRANGE : we will calculate the overlap over shifts of the ROIs in X , Y , and Z . e . g . , XRANGE = [ - 5 : 1 : 5 ] YRANGE = [ - 5 : 1 : 5 ], ZRANGE = [ - 5 : 1 5 ] computes the overlap for all shifts in X , Y , and Z of 5 pixels ( in all directions ) . IMSIZE - The image size in pixels [ NX NY NZ ] Outputs : OVERLAPA ( x , y , z ) is the fraction of roi3d1 that overlaps roi3d2 when roi3d1 is shifted by x , y , z pixels OVERLAPB ( x , y , z ) is the fraction of roi3d2 that overlaps roi3d1 when roi3d1 is shifted by x , y , z pixels See also : SPOTDETECTOR3 , ALL_OVERLAPS","title":"rois3d_overlap"},{"location":"reference/z_old_archived_code/rois3dcat.m/","text":"rois3dcat \u00b6 ROIS3DCAT - Concatenate 3 D rois into a single roi [ ROIS3DMERGED , L ] = ROIS3DCAT ( ROIS3D , L ) Merges all of the ROIS3D into a single ROI . Useful if you want to examine material from a large object that might be divided into small pieces . Inputs : ROIS3D is a structure returned by SPOTDETECTOR3 that describes 3 D ROIS . L is the labeled ROI matrix that is the same size as the image . See also : SPOTDETECTOR3","title":"rois3dcat"},{"location":"reference/z_old_archived_code/rois3dcat.m/#rois3dcat","text":"ROIS3DCAT - Concatenate 3 D rois into a single roi [ ROIS3DMERGED , L ] = ROIS3DCAT ( ROIS3D , L ) Merges all of the ROIS3D into a single ROI . Useful if you want to examine material from a large object that might be divided into small pieces . Inputs : ROIS3D is a structure returned by SPOTDETECTOR3 that describes 3 D ROIS . L is the labeled ROI matrix that is the same size as the image . See also : SPOTDETECTOR3","title":"rois3dcat"},{"location":"reference/z_old_archived_code/spotdetection_test.m/","text":"spotdetection_test \u00b6 spotdetection_test is a script.","title":"spotdetection_test"},{"location":"reference/z_old_archived_code/spotdetection_test.m/#spotdetection_test","text":"spotdetection_test is a script.","title":"spotdetection_test"},{"location":"reference/z_old_archived_code/spotdetector3.m/","text":"spotdetector3 \u00b6 SPOTDETECTOR - identifies spots in a binary image [ ROIS3D , L , ROIS2D ] = SPOTDETECTOR3 ( BI , CONNECTIVITY , ROINAME , ... FIRSTINDEX , LABELS ) Inputs: BI - binary image in which to detect spots ( can be 3 d ) CONNECTIVITY - 4 or 8 ; should pixels only be considered connected if they are immediately adjacent in x and y ( 4 ) or should diagonals be considered adjacent ( 8 ) ? ROINAME - Name for the ROI series ... maybe the same as a filename ? FIRSTINDEX - Index number to start with for labeling ( maybe 0 or 1 ? ) LABELS - Any labels you might want to include ( string or cell list ) Ouputs: ROIS3D a structure array with the following fields: ROIS3D ( i ). name The name of the roi ( same as ROINAME ) ROIS3D ( i ). index The index number ROIS3D ( i ). xi The xi coordinates of the contour ROIS3D ( i ). yi The yi coordinates of the contour ROIS3D ( i ). pixelinds Pixel index values ( in image BW ) of the ROI ROIS3D ( i ). labels Any labels for this ROI ROIS3D ( i ). stats All stats from matlab ' s regionprops func L - the labeled 3 D BW image ; the numbers correspond to the ROIs ( 0 means no ROI was found at that location ) ROIS2D - a structure array with the 2 d rois that were observed in the individual images in the stack BI","title":"spotdetector3"},{"location":"reference/z_old_archived_code/spotdetector3.m/#spotdetector3","text":"SPOTDETECTOR - identifies spots in a binary image [ ROIS3D , L , ROIS2D ] = SPOTDETECTOR3 ( BI , CONNECTIVITY , ROINAME , ... FIRSTINDEX , LABELS ) Inputs: BI - binary image in which to detect spots ( can be 3 d ) CONNECTIVITY - 4 or 8 ; should pixels only be considered connected if they are immediately adjacent in x and y ( 4 ) or should diagonals be considered adjacent ( 8 ) ? ROINAME - Name for the ROI series ... maybe the same as a filename ? FIRSTINDEX - Index number to start with for labeling ( maybe 0 or 1 ? ) LABELS - Any labels you might want to include ( string or cell list ) Ouputs: ROIS3D a structure array with the following fields: ROIS3D ( i ). name The name of the roi ( same as ROINAME ) ROIS3D ( i ). index The index number ROIS3D ( i ). xi The xi coordinates of the contour ROIS3D ( i ). yi The yi coordinates of the contour ROIS3D ( i ). pixelinds Pixel index values ( in image BW ) of the ROI ROIS3D ( i ). labels Any labels for this ROI ROIS3D ( i ). stats All stats from matlab ' s regionprops func L - the labeled 3 D BW image ; the numbers correspond to the ROIs ( 0 means no ROI was found at that location ) ROIS2D - a structure array with the 2 d rois that were observed in the individual images in the stack BI","title":"spotdetector3"}]}